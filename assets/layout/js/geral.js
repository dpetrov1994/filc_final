CKEDITOR.disableAutoInline = true;$('.clockpicker').clockpicker({        donetext: "Confirmar",        autoclose:false,        vibrate:true    });/** * REPLACE ALL */String.prototype.replaceAll = function (find, replace) {    var str = this;    return str.replace(new RegExp(find.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&'), 'g'), replace);};/** * ******************** jQuery vaidation ************************** * * Remove espaços e enters desnecesários */(function ($) {    $.each($.validator.methods, function (key, value) {        $.validator.methods[key] = function () {            if(arguments.length > 0) {                var el = $(arguments[1]);                if(el.prop('type') != 'select-multiple' && el.prop('type') != 'file'){                    el.val($.trim(el.val()));                }            }            return value.apply(this, arguments);        };    });    // verifica se a data é dd/mm/YYYY    $.validator.addMethod(        "dataPortuguesa",        function(value, element) {            // put your own logic here, this is just a (crappy) example            return value.match(/^\d\d?\/\d\d?\/\d\d\d\d$/);        },        "Por favor insira a data no formato dd/mm/yyyy."    );    $.validator.addMethod("time24", function(value, element) {        if (!/^\d{2}:\d{2}$/.test(value)) return false;        var parts = value.split(':');        if (parts[0] > 23 || parts[1] > 59){            return false;        }else{            return true;        }    }, "Formato de hora inválido.");    jQuery.validator.addMethod("compara_hora_inicio_hora_fim", function (value, element, options) {        var hora_inicio = $('#hora_inicio').val().split(":");        var hora_fim = $('#hora_fim').val().split(":");        if(hora_fim.length!=2 || hora_inicio.length!=2){            return false;        }else {            var hora_inicio_horas = hora_inicio[0] * 1;            var hora_inicio_minutos = hora_inicio[1] * 1;            var hora_fim_horas = hora_fim[0] * 1;            var hora_fim_minutos = hora_fim[1] * 1;            if (hora_inicio_horas > hora_fim_horas) {                //alert(hora_inicio_horas+">"+hora_fim_horas);                return false;            } else {                if (hora_inicio_horas == hora_fim_horas && hora_inicio_minutos > hora_fim_minutos) {                    //alert(hora_inicio_horas+"=="+hora_fim_horas +"&&"+ hora_inicio_minutos+">"+hora_fim_minutos);                    return false;                } else {                    if (hora_inicio_horas == hora_fim_horas && hora_inicio_minutos == hora_fim_minutos) {                        //alert(hora_inicio_horas+"=="+hora_fim_horas +"&&"+ hora_inicio_minutos+"=="+hora_fim_minutos);                        return false;                    } else {                        return true                    }                }            }            return true;        }    }, "A hora fim tem de ser superior a hora de início.");} (jQuery));jQuery.validator.setDefaults({ onkeyup: false  });$( document ).ready(function() {    //funciona para meter html dentro dos selects2    // o select tem de ter a class html-select2 e as options têm de o attr data-html='<b>TESTE</b>'    $(".html-select2").each(function () {        var myOpts = this.options;        var data=[];        var c=0;        for(var i=0;i<myOpts.length;i++) {            if($(myOpts[i]).val()!=""){                var tmp={                    id: $(myOpts[i]).val(),                    text: $(myOpts[i]).attr("data-html"),                    html: $(myOpts[i]).attr("data-html"),                    title: $(myOpts[i]).text()                };                if($(myOpts[i]).attr("selected")=="selected"){                    tmp.selected=true;                }                data[c]=tmp;                c++;            }        }        $(this).html("");        $(this).select2({            data: data,            escapeMarkup: function(markup) {                return markup;            },            templateResult: function(data) {                return data.html;            },            templateSelection: function(data) {                return data.text;            }        });    });    //funciona para meter html dentro dos selects2    $('input[name*=hora_inicio]').rules('add', 'compara_hora_inicio_hora_fim');    $('input[name*=hora_fim]').rules('add', 'compara_hora_inicio_hora_fim');});if(document.getElementById("form-upload-nuvem")){    $('#form-upload-nuvem').validate({        errorClass: 'help-block animation-slideUp', // You can change the animation class for a different entrance animation - check animations page        errorElement: 'small',        errorPlacement: function(error, e) {            if(e.parent().hasClass("clockpicker")){                e.parent().parent().append(error);            }else{                e.parent().append(error);            }},        highlight: function(e) {            $(e).closest('div').removeClass('has-success has-error').addClass('has-error');            $(e).closest('.help-block').remove();        },        success: function(e) {            e.closest('div').removeClass('has-success has-error');            e.closest('.help-block').remove();        }    });    $("#form-upload-nuvem").data("validator").settings.submitHandler = function (form) {        $.ajax({            type: form.method,            url: form.action,            data: $(form).serialize(),            success: function(response) {                //alert(response);                location.reload();            }        });        return false; // required to block normal submit since you used ajax    };    $("#form-upload-nuvem").on('submit', function() {        if ($(this).valid()) {            $("#form-upload-nuvem_botao_loading").button('loading');            this.submit();        }    });}$("#botao_loading").click(function () {    window.onbeforeunload = null;});function uniqId() {    return Math.round(new Date().getTime() + (Math.random() * 100));}/** * botao para selecionar todos os itens do select 2 */function addAllButton() {    $(".select-select2").each(function () {        if($(this).attr("multiple")){            var id=uniqId();            $(this).attr("data-idselect",id);            $(this).after('<label class=\'csscheckbox csscheckbox-primary\'><input onchange="selecionar_tudo_select2(\''+id+'\',this.checked)" class="selecionar_tudo_select2" type=\'checkbox\'><span></span> <i class="text-primary">Selecionar tudo</i></label>')        }    });}function selecionar_tudo_select2(select_id,checked){    if(checked==true){        $("*[data-idselect=\""+select_id+"\"]").children().each(function () {            if($(this).val()!=""){                $(this).prop("selected","selected");            }        });        $("*[data-idselect=\""+select_id+"\"]").trigger("change");    }else{        $("*[data-idselect=\""+select_id+"\"] > option").removeAttr("selected");        $("*[data-idselect=\""+select_id+"\"]").trigger("change");    }}function criar_pasta_automatica_aula(id_ano_letivo,id_turma,id_aula) {    $.ajax({        type: 'POST',        url: '../mod_nuvem/upload_nuvem.php',        data:"id_ano_letivo="+id_ano_letivo+"&id_turma="+id_turma+"&id_aula="+id_aula,        success: function (response) {            location.reload();        }    });    return false;}function criar_pasta_automatica_aluno(id_ano_letivo,id_aluno) {    $.ajax({        type: 'POST',        url: '../mod_nuvem/upload_nuvem.php',        data:"id_ano_letivo="+id_ano_letivo+"&id_aluno="+id_aluno,        success: function (response) {            location.reload();        }    });    return false;}function criar_pasta_automatica_turma(id_ano_letivo,id_turma) {    $.ajax({        type: 'POST',        url: '../mod_nuvem/upload_nuvem.php',        data:"id_ano_letivo="+id_ano_letivo+"&id_turma="+id_turma,        success: function (response) {            location.reload();        }    });    return false;}if(document.getElementById("form-renomear-pasta-ficheiro")){    $('#form-renomear-pasta-ficheiro').validate({        errorClass: 'help-block animation-slideUp', // You can change the animation class for a different entrance animation - check animations page        errorElement: 'small',        errorPlacement: function(error, e) {            if(e.parent().hasClass("clockpicker")){                e.parent().parent().append(error);            }else{                e.parent().append(error);            }},        highlight: function(e) {            $(e).closest('div').removeClass('has-success has-error').addClass('has-error');            $(e).closest('.help-block').remove();        },        success: function(e) {            e.closest('div').removeClass('has-success has-error');            e.closest('.help-block').remove();        }    });    $("#form-renomear-pasta-ficheiro").data("validator").settings.submitHandler = function (form) {        $.ajax({            type: form.method,            url: form.action,            data: $(form).serialize(),            success: function(response) {                //alert(response);                location.reload();            }        });        return false; // required to block normal submit since you used ajax    };    $("#form-renomear-pasta-ficheiro").on('submit', function() {        if ($(this).valid()) {            $("#form-renomear-pasta-ficheiro_botao_loading").button('loading');            this.submit();        }    });}if(document.getElementById("form-nova-pasta")){    $('#form-nova-pasta').validate({        errorClass: 'help-block animation-slideUp', // You can change the animation class for a different entrance animation - check animations page        errorElement: 'small',        errorPlacement: function(error, e) {            if(e.parent().hasClass("clockpicker")){                e.parent().parent().append(error);            }else{                e.parent().append(error);            }},        highlight: function(e) {            $(e).closest('div').removeClass('has-success has-error').addClass('has-error');            $(e).closest('.help-block').remove();        },        success: function(e) {            e.closest('div').removeClass('has-success has-error');            e.closest('.help-block').remove();        }    });    $("#form-nova-pasta").data("validator").settings.submitHandler = function (form) {        $.ajax({            type: form.method,            url: form.action,            data: $(form).serialize(),            success: function(response) {                //alert(response);                location.reload();            }        });        return false; // required to block normal submit since you used ajax    };    $("#form-nova-pasta").on('submit', function() {        if ($(this).valid()) {            $("#form-nova-pasta_botao_loading").button('loading');            this.submit();        }    });}function renomearPastaFicheiro(id_item,nome_item,tipo){    $("#id_pasta_ficheiro").val(id_item);    $("#nome_pasta_ficheiro").val(nome_item);    $("#tipo").val(tipo);    $("#abrir-modal-renomear").click();}function mostrarCheckboxes(){    if($(".esconder_mostrar_checkbox").children("b").hasClass("hidden")){        $(".esconder_mostrar_checkbox").children("b").removeClass("hidden");        $(".esconder_mostrar_checkbox").children("label").addClass("hidden");        $("#icon_selecionar_varios").addClass("fa-square-o");        $("#icon_selecionar_varios").removeClass("fa-square");        $("#btn-submit-reciclar-varios").addClass("hidden");    }else{        $(".esconder_mostrar_checkbox").children("b").addClass("hidden");        $(".esconder_mostrar_checkbox").children("label").removeClass("hidden");        $("#icon_selecionar_varios").removeClass("fa-square-o");        $("#icon_selecionar_varios").addClass("fa-square");        $("#btn-submit-reciclar-varios").removeClass("hidden");    }}//criar validação para o form se existirif(document.getElementById("form-para-validar")) {    $('#form-para-validar').validate({        errorClass: 'help-block animation-slideUp', // You can change the animation class for a different entrance animation - check animations page        errorElement: 'small',        errorPlacement: function (error, e) {            if(e.parent().hasClass("clockpicker")){                e.parent().parent().append(error);            }else if(e.parent().hasClass("input-daterange")){                e.parent().parent().append(error);            }else{                e.parent().append(error);            }},        highlight: function (e) {            $(e).closest('div').removeClass('has-success has-error').addClass('has-error');            $(e).closest('.help-block').remove();        },        success: function (e) {            e.closest('div').removeClass('has-success has-error');            e.closest('.help-block').remove();        }    });    $("#form-para-validar").on('submit', function () {        if ($(this).valid()) {            $("#botao_loading").button('loading');            this.submit();        }    });}/** * ******************** traduçaõ dos date picjers ************************** */$.fn.datepicker.dates['en'] = {    days: ["Domingo", "Segunda-feira", "Terça-feira", "Quarta-feira", "Quinta-feira", "Sexta-feira", "Sábado"],    daysShort: ["Dom", "Seg", "Ter", "Qua", "Qui", "Sex", "Sáb"],    daysMin: ["Do", "Se", "Te", "Qu", "Qu", "Se", "Sá"],    months: ["Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"],    monthsShort: ["Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez"],    today: "Hoje",    clear: "Limpar",    format: "dd/mm/yyyy",    titleFormat: "MM yyyy", /* Leverages same syntax as 'format' */    weekStart: 1};/** * ******************** adiciona today highlight ao daterangepicker ************************** */$('.input-datepicker').datepicker({    todayHighlight: true,});$('.input-timepicker24').timepicker({    minuteStep: 5,    showMeridian: false,    showSecond: false,    showMillisec: false});/** * ******************** REDIRECIONA PARA LOCK ************************** *//*$.ajax({    url: "login/lock.php?teste=1", //or your url    success: function(data){        setTimeout(function(){ window.location.href = "login/lock.php"; }, tempoLock);    },    error: function(data){        setTimeout(function(){ window.location.href = "../login/lock.php"; }, tempoLock);    }});*//** * * alterar o tempo para lock */function alterarTempoLock(val){    $.ajax({        url: "../alterarTempoLock.php", //or your url        success: function(data){            url= "../alterarTempoLock.php";            var xmlhttp = new XMLHttpRequest();            xmlhttp.onreadystatechange = function() {                if (this.readyState == 4 && this.status == 200) {                }            };            xmlhttp.open("GET","../alterarTempoLock.php?val=" + val, true);            xmlhttp.send();        },        error: function(data){            url= "alterarTempoLock.php";            var xmlhttp = new XMLHttpRequest();            xmlhttp.onreadystatechange = function() {                if (this.readyState == 4 && this.status == 200) {                }            };            xmlhttp.open("GET", "alterarTempoLock.php?val=" + val, true);            xmlhttp.send();        }    });}$("#alterarTempoLock").change(function(){    alterarTempoLock($("#alterarTempoLock").val());});function confirmaModal(url) {    $("#confirmaModalSim").prop("href", url);    $("#confirmaModal").click();}function confirmaAcaoVariosModal(action) {    if (typeof(action)==='undefined'){        action = 0;    }    $("#confirmaModalSim").prop("href", "javascript:void()");    document.getElementById('confirmaModalSim').onclick = function() { document.getElementById('form-acao-varios').submit(); };    if(action!=0){        $("#form-acao-varios").prop("action", action);    }    $("#confirmaModal").click();}$("#confirmaModalSim").click(function () {    //document.getElementById('confirmaModal_botoes').innerHTML="<p class='col-lg-12 text-center'><i class='fa fa-2x fa-spin fa-asterisk text-primary'></i></p>";});//modal de adicionar docentesfunction adicionarDocente(utilizador,turma) {    $("#adicionarDocenteTurma").prop("value", turma);    $("#adicionarDocenteUtilizador").prop("value", utilizador);    $("#adicionarDocente").click();}//função que mostra a notificaçãofunction growlNot(tipo,mensagem,align="left",from="bottom",delay=3000,hide_others=false){    if(hide_others==true){        closeGrowl();    }    $.bootstrapGrowl(mensagem, {        ele: 'body',        align: align, // ('left', 'right', or 'center')        type: tipo,        delay: delay,        allow_dismiss: true,        offset: {from: from, amount: 5}    });}function closeGrowl() {    $(".bootstrap-growl").hide();}/*//adicionar botao de volta para trasvar message="<a onclick='window.history.back();' style='opacity:0.4' data-toggle='tooltip' data-original-title='Voltar' class='btn btn-primary'>&nbsp;<i class='fa fa-2x fa-angle-left'></i>&nbsp;&nbsp;</a>";$.bootstrapGrowl(message, {    ele: 'body', // which element to append to    type: 'default', // ('success', 'info', 'warning', 'danger')    offset: {from: 'bottom', amount: 20}, // 'top', or 'bottom'    align: 'center', // ('left', 'right', or 'center')    width: 70, // (integer, or 'auto')    delay: 0, // in ms    allow_dismiss: false,    stackup_spacing: 10 // spacing between consecutively stacked growls});*///adicioanr altura ao contentor por causa do botaovar altura=$("#page-content-2").height();altura+=200;altura=document.getElementById("page-content-2").style.minHeight=altura+"px";function animar(nomeClass) {    var elementos = document.getElementsByClassName(nomeClass);    var randomElement = Math.floor((Math.random() * elementos.length) + 0);    randomElement=elementos[randomElement];    var animations=['bounce', 'flash', 'pulse', 'rubberBand', 'shake', 'headShake', 'swing', 'tada', 'wobble', 'jello', 'bounceIn', 'bounceInDown', 'bounceInLeft', 'bounceInRight', 'bounceInUp', 'bounceOut', 'bounceOutDown', 'bounceOutLeft', 'bounceOutRight', 'bounceOutUp', 'fadeIn', 'fadeInDown', 'fadeInDownBig', 'fadeInLeft', 'fadeInLeftBig', 'fadeInRight', 'fadeInRightBig', 'fadeInUp', 'fadeInUpBig', 'fadeOut', 'fadeOutDown', 'fadeOutDownBig', 'fadeOutLeft', 'fadeOutLeftBig', 'fadeOutRight', 'fadeOutRightBig', 'fadeOutUp', 'fadeOutUpBig', 'flipInX', 'flipInY', 'flipOutX', 'flipOutY', 'lightSpeedIn', 'lightSpeedOut', 'rotateIn', 'rotateInDownLeft', 'rotateInDownRight', 'rotateInUpLeft', 'rotateInUpRight', 'rotateOut', 'rotateOutDownLeft', 'rotateOutDownRight', 'rotateOutUpLeft', 'rotateOutUpRight', 'hinge', 'rollIn', 'rollOut', 'zoomIn', 'zoomInDown', 'zoomInLeft', 'zoomInRight', 'zoomInUp', 'zoomOut', 'zoomOutDown', 'zoomOutLeft', 'zoomOutRight', 'zoomOutUp', 'slideInDown', 'slideInLeft', 'slideInRight', 'slideInUp', 'slideOutDown', 'slideOutLeft', 'slideOutRight', 'slideOutUp'];    var animationName= Math.floor((Math.random() * animations.length) + 0);    animationName=animations[animationName];    var animationEnd = 'webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend';    $(randomElement).addClass('animated ' + animationName).one(animationEnd, function() {        $(this).removeClass('animated ' + animationName);    });}//setInterval(function(){ animar("btn"); }, 300000);//setInterval(function(){ animar("fa"); }, 300000);/** * ******************** preview da imagem upload ************************** */function readURL(input,elem_id) {    if (input.files && input.files[0]) {        var reader = new FileReader();        reader.onload = function (e) {            $('#'+elem_id).attr('src', e.target.result);            $('#'+elem_id).removeClass("hidden");            $('#'+elem_id).removeClass("hidden");            caminho=e.target.result;        };        reader.readAsDataURL(input.files[0]);    }}//cropboxfunction imageCrop() {    var options =        {            imageBox: '.imageBox',            thumbBox: '.thumbBox',            spinner: '.spinner',            imgSrc: 'avatar.png'        };    var cropper;    document.querySelector('#file').addEventListener('change', function(){        var reader = new FileReader();        reader.onload = function(e) {            options.imgSrc = e.target.result;            cropper = new cropbox(options);        };        reader.readAsDataURL(this.files[0]);        this.files = [];    });    document.querySelector('#btnCrop').addEventListener('click', function(){        var img = cropper.getDataURL();        document.getElementById('imagemUpload').value=img;        document.getElementById("BTNconcluir").click();    });    document.querySelector('#btnZoomIn').addEventListener('click', function(){        cropper.zoomIn();    });    document.querySelector('#btnZoomOut').addEventListener('click', function(){        cropper.zoomOut();    })}function previewFicheiro(trigger,content){    $("#"+trigger).magnificPopup({        items: {            src: '#'+content,            type: 'inline',            closeOnContentClick: false,            closeOnBgClick: false,            showCloseBtn: true,            closeBtnInside: true        }    });    console.log(content);}function copiar(){    growlNot('success',        '<h4>Link do elemento copiado.</h4>' +        'Pode colar (CTRL+V) e partilhar com quem desejar.');}// SIDEBAR - CONFIGURACOES DO UTILIZADORfunction cfguser(elem){    $.ajax({        url: "../alterarConfigUtilizador.php?teste=1", //or your url        success: function(data){            var xmlhttp = new XMLHttpRequest();            xmlhttp.onreadystatechange = function() {                if (this.readyState == 4 && this.status == 200) {                    console.log(this.responseText);                }            };            var id=elem.id;            var checked=0;            if(elem.checked==true){                var checked=1;            }            xmlhttp.open("GET", "../alterarConfigUtilizador.php?id=" + id+"&checked="+checked, true);            xmlhttp.send();        },        error: function(data){            var xmlhttp = new XMLHttpRequest();            xmlhttp.onreadystatechange = function() {                if (this.readyState == 4 && this.status == 200) {                    console.log(this.responseText);                }            };            var id=elem.id;            var checked=0;            if(elem.checked==true){                var checked=1;            }            xmlhttp.open("GET", "alterarConfigUtilizador.php?id=" + id+"&checked="+checked, true);            xmlhttp.send();        }    });}/** * * vai buscar as mensagens on click para o addonmensgens */function getItensAddon(urlFicheiro,idElem){    $.ajax({        url: "../"+urlFicheiro+".php?teste=1", //or your url        success: function(data){            url= "../"+urlFicheiro+".php";            var xmlhttp = new XMLHttpRequest();            xmlhttp.onreadystatechange = function() {                if (this.readyState == 4 && this.status == 200) {                    document.getElementById(idElem).innerHTML=this.responseText;                }            };            xmlhttp.open("GET","../"+urlFicheiro+".php?addUrl=1", true);            xmlhttp.send();        },        error: function(data){            url= urlFicheiro+".php?teste=1";            var xmlhttp = new XMLHttpRequest();            xmlhttp.onreadystatechange = function() {                if (this.readyState == 4 && this.status == 200) {                    if (this.readyState == 4 && this.status == 200) {                        document.getElementById(idElem).innerHTML=this.responseText;                    }                }            };            xmlhttp.open("GET", urlFicheiro+".php?addUrl=0", true);            xmlhttp.send();        }    });    document.getElementById(idElem).innerHTML="<li class='text-center'><b class='fa fa-asterisk fa-2x fa-spin text-primary'></b></li>";}/* Select/Deselect all checkboxes in tables */$('thead input:checkbox').click(function() {    var checkedStatus   = $(this).prop('checked');    var table           = $(this).parents('table');    $('input:checkbox', table).each(function() {        $(this).prop('checked', checkedStatus);    });});//gera pass aleatóriafunction gerarPass() {    var length = 8,        charset = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789",        retVal = "";    for (var i = 0, n = charset.length; i < length; ++i) {        retVal += charset.charAt(Math.floor(Math.random() * n));    }    document.getElementById("pass").value=retVal;    document.getElementById("pass2").value=retVal;}function desativarInputs() {    $("#page-content input").prop("readonly", true);    $("#page-content input[type=checkbox]").prop("disabled", true);    $("#page-content input[type=radio]").prop("disabled", true);    $("#page-content input[type=file]").prop("disabled", true);    $("#page-content select").prop("disabled", true);    $("#page-content textarea").prop("readonly", true);    $("#page-content .csscheckbox > span").addClass("disabledCheckbox");    $("#desativar-inputs input").prop("readonly", true);    $("#desativar-inputs input[type=checkbox]").prop("disabled", true);    $("#desativar-inputs input[type=radio]").prop("disabled", true);    $("#desativar-inputs input[type=file]").prop("disabled", true);    $("#desativar-inputs select").prop("disabled", true);    $("#desativar-inputs textarea").prop("readonly", true);    $("#desativar-inputs .csscheckbox > span").addClass("disabledCheckbox");}function backgroudUpdate(url){    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function() {        if (this.readyState == 4 && this.status == 200) {            //alert(this.responseText);        }    };    xmlhttp.open("GET", "../_backgroudUpdate.php?url="+encodeURIComponent(url), true);    xmlhttp.send();}function setAnoLetivo(id_ano_letivo){    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function() {        if (this.readyState == 4 && this.status == 200) {            //alert(this.responseText);            location.reload();        }    };    xmlhttp.open("GET", "../setAnoLetivo.php?id="+id_ano_letivo, true);    xmlhttp.send();}function marcarEstrela(id_utilizador_mensagem){    var elem=document.getElementById("estrela"+id_utilizador_mensagem);    var estrela;    if (elem.classList.contains('fa-star')) {        estrela=0;        elem.classList.remove('fa-star');        elem.classList.add('fa-star-o');    }else{        estrela=1;        elem.classList.remove('fa-star-o');        elem.classList.add('fa-star');    }    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function() {        if (this.readyState == 4 && this.status == 200) {            //alert(this.responseText);        }    };    xmlhttp.open("GET", "addEstrela.php?estrela="+estrela+"&id="+id_utilizador_mensagem, true);    xmlhttp.send();}function sortList(list_id,child_elem) {    var list, i, switching, b, shouldSwitch;    list = document.getElementById(list_id);    switching = true;    while (switching) {        switching = false;        b = list.getElementsByTagName(child_elem);        for (i = 0; i < (b.length - 1); i++) {            shouldSwitch = false;            if (b[i].innerHTML.toLowerCase() > b[i + 1].innerHTML.toLowerCase()) {                shouldSwitch= true;                break;            }        }        if (shouldSwitch) {            b[i].parentNode.insertBefore(b[i + 1], b[i]);            switching = true;        }    }}function startTimer(duration_in_sec, id_elem) {    var timer = duration_in_sec,hours, minutes, seconds;    var display = document.querySelector('#'+id_elem);    var interval_timer=setInterval(function () {        minutes = parseInt(timer / 60, 10);        hours = parseInt(minutes / 60, 10);        minutes=parseInt((minutes-(60*hours)),10);        seconds = parseInt(timer % 60, 10);        hours = hours < 10 ? "0" + hours : hours;        minutes = minutes < 10 ? "0" + minutes : minutes;        seconds = seconds < 10 ? "0" + seconds : seconds;        display.textContent = hours + ":"+minutes + ":" + seconds;        if (--timer < 0) {            timer = duration_in_sec;        }        if(timer==0){            clearInterval(interval_timer);            location.reload();        }    }, 1000);}if(document.getElementById("myAwesomeDropzone")) {    var myDropzone = new Dropzone("#myAwesomeDropzone",        {            url: "../tmp_files_upload.php",            init: function () {                this.on("processing",function () {                    window.onbeforeunload = function() {                        return ("Antes de sair confirme se todos os ficheiros foram carregados e de seguida carrege em \"Concluir\".");                    };                });                this.on("success", function (file, response) {                    if (this.getUploadingFiles().length === 0 && this.getQueuedFiles().length === 0) {                        // alert(response);                        growlNot('success',                            '<h4>Ficheiros carregados!</h4>');                        //window.onbeforeunload = null;                    }                });            },            addRemoveLinks: true,            removedfile: function (file) {                var nome = file.name;                var xmlhttp = new XMLHttpRequest();                xmlhttp.onreadystatechange = function () {                    if (this.readyState == 4 && this.status == 200) {                        console.log(this.responseText);                        var _ref;                        return (_ref = file.previewElement) != null ? _ref.parentNode.removeChild(file.previewElement) : void 0;                    }                };                xmlhttp.open("GET", "../tmp_files_delete.php?nome=" + nome, true);                xmlhttp.send();            }        });}var clipboard = new Clipboard(".btn_copiar");function getConcelhosDistrito(id_distrito,id_elem){    document.getElementById(id_elem).innerHTML = "<option disabled>Aguarde...</option>";    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function() {        if (this.readyState == 4 && this.status == 200) {            document.getElementById(id_elem).innerHTML = this.responseText;            $("#"+id_elem).select2();        }    };    xmlhttp.open("GET", "../getConcelhosDistrito.php?id_distrito=" + id_distrito, true);    xmlhttp.send();}//swipeDETECT// credit: http://www.javascriptkit.com/javatutors/touchevents2.shtml/*function swipedetect(el, callback){    var touchsurface = el,        swipedir,        startX,        startY,        distX,        distY,        threshold = 150, //required min distance traveled to be considered swipe        restraint = 100, // maximum distance allowed at the same time in perpendicular direction        allowedTime = 300, // maximum time allowed to travel that distance        elapsedTime,        startTime,        handleswipe = callback || function(swipedir){}    touchsurface.addEventListener('touchstart', function(e){        var touchobj = e.changedTouches[0]        swipedir = 'none'        dist = 0        startX = touchobj.pageX        startY = touchobj.pageY        startTime = new Date().getTime() // record time when finger first makes contact with surface        e.preventDefault()    }, false)    touchsurface.addEventListener('touchmove', function(e){        e.preventDefault() // prevent scrolling when inside DIV    }, false)    touchsurface.addEventListener('touchend', function(e){        var touchobj = e.changedTouches[0]        distX = touchobj.pageX - startX // get horizontal dist traveled by finger while in contact with surface        distY = touchobj.pageY - startY // get vertical dist traveled by finger while in contact with surface        elapsedTime = new Date().getTime() - startTime // get time elapsed        if (elapsedTime <= allowedTime){ // first condition for awipe met            if (Math.abs(distX) >= threshold && Math.abs(distY) <= restraint){ // 2nd condition for horizontal swipe met                swipedir = (distX < 0)? 'left' : 'right' // if dist traveled is negative, it indicates left swipe            }            else if (Math.abs(distY) >= threshold && Math.abs(distX) <= restraint){ // 2nd condition for vertical swipe met                swipedir = (distY < 0)? 'up' : 'down' // if dist traveled is negative, it indicates up swipe            }        }        handleswipe(swipedir)        e.preventDefault()    }, false)}//USAGE:/*var el = document.getElementById('body');swipedetect(el, function(swipedir){    // swipedir contains either "none", "left", "right", "top", or "down"    var elem = $('#'+el.id);    if(swipedir=="right"){        if(elem.hasClass("sidebar-alt-visible-xs")){            document.getElementById('abrirMenuDefinicoes').click();        }else if(!elem.hasClass("sidebar-visible-xs")){            document.getElementById('abrirMenuPrincipal').click();        }    }else if(swipedir=="left"){        if(elem.hasClass("sidebar-visible-xs")){            document.getElementById('abrirMenuPrincipal').click();        }else if(!elem.hasClass("sidebar-alt-visible-xs")){            document.getElementById('abrirMenuDefinicoes').click();        }    }});*/function toggleDisableInput(checked,id_elem){    if(checked==true){        document.getElementById(id_elem).disabled=false;    }else{        document.getElementById(id_elem).disabled=true;    }}(function($) {    $.fn.serializefiles = function() {        var obj = $(this);        /* ADD FILE TO PARAM AJAX */        var formData = new FormData();        $.each($(obj).find("input[type='file']"), function(i, tag) {            $.each($(tag)[0].files, function(i, file) {                formData.append(tag.name, file);            });        });        var params = $(obj).serializeArray();        $.each(params, function (i, val) {            formData.append(val.name, val.value);        });        return formData;    };})(jQuery);function loading_animation(btn){    var text=$(btn).html();    $(btn).html("<i class='fa fa-spinner fa-spin'></i> Aguarde..");    setTimeout(function () {        $(btn).html(text);    },25000);}$("a[target='_blank']").click(function(){    if(!$(this).hasClass("noblank")){        $("#iframe_para_url").attr("src",$(this).attr("href"));        $("#modal-iframe").modal("toggle");        return false;    }});/*$(function() {    $("#main-container").swipe( {        //Generic swipe handler for all directions        swipe:function(event, direction, distance, duration, fingerCount, fingerData) {            if(direction=="right"){                App.sidebar('open-sidebar');            }else if(direction=="left"){                App.sidebar('close-sidebar');            }else if(direction=="down"){                if($(window).scrollTop() === 0) {                    $("#reloading-animation").css("display","block");                    location.reload();                }            }else{                return true;            }        },        excludedElements: "label, button, input,label, select, textarea,img" // Here your list of excluded elements ...    });});*/function link_para_download(link) {    var file_path = link;    var a = document.createElement('A');    a.href = file_path;    a.download = file_path.substr(file_path.lastIndexOf('/') + 1);    document.body.appendChild(a);    a.click();    document.body.removeChild(a);}function descarregar_ficheiro_gerado(url,id_botao){    $("#"+id_botao).button('loading');    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function() {        if (this.readyState == 4 && this.status == 200) {            window.location=this.responseText;            ("#"+id_botao).button('reset');        }    };    xmlhttp.open("GET", url, true);    xmlhttp.send();}function toggleRepetir(elem){    if($(elem).prop("checked")==true){        $(".div_repetir").show("fast");    }else{        $(".div_repetir").hide("fast");    }}if(document.getElementById("enviar-orcamento")) {    $('#enviar-orcamento').validate({        errorClass: 'help-block animation-slideUp', // You can change the animation class for a different entrance animation - check animations page        errorElement: 'small',        errorPlacement: function (error, e) {            if (e.parent().hasClass("clockpicker")) {                e.parent().parent().append(error);            } else {                e.parent().append(error);            }        },        highlight: function (e) {            $(e).closest('div').removeClass('has-success has-error').addClass('has-error');            $(e).closest('.help-block').remove();        },        success: function (e) {            e.closest('div').removeClass('has-success has-error');            e.closest('.help-block').remove();        }    });    $("#enviar-orcamento").data("validator").settings.submitHandler = function (form) {        $.ajax({            type: form.method,            url: form.action,            data: $(form).serialize(),            success: function (response) {                $('#modal-confirmar_email').modal('hide');                console.log(response);                growlNot("success", "Orçamento enviado!");                $("#btn-enviar-orcamento").button('reset');            }        });        return false; // required to block normal submit since you used ajax    };    $("#enviar-orcamento").on('submit', function () {        if ($(this).valid()) {            $("#btn-enviar-orcamento").button('loading');        }    });}function modal_confirmar_email(id){    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function() {        if (this.readyState == 4 && this.status == 200) {;            $("#destinatario").val(this.responseText);            $("#link_orcamento").attr("href","imprimir.php?id="+id);            $("#id_orcamento").val(id);            $("#modal-confirmar_email").modal("show");        }    };    xmlhttp.open("GET", "../mod_orcamentos/_modal_confirmar_email.php?id=" + id, true);    xmlhttp.send();}$(".mostra_filtros").click(function () {    $("#form-pagina").animate({height: 'toggle'})});function verificarCliente(){    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function() {        if (this.readyState == 4 && this.status == 200) {            var r=JSON.parse(this.responseText);            if(r.tipo=="danger"){                growlNot(r.tipo,r.mensagem);                $("#botao_loading").attr("disabled",true);            }else{                $("#botao_loading").attr("disabled",false);            }        }    };    xmlhttp.open("GET", "../mod_clientes/_verificar_cliente.php?id=" + $("#id").val()+"&email="+$("#email").val()+"&telefone="+$("#telefone").val()+"&telemovel="+$("#telemovel").val(), true);    xmlhttp.send();}function removerLinha(elem){    $(elem).parent().parent().remove();}function mostrarImoveis(){    window.location="../mod_imoveis/index.php?city="+$("#city").val()+"&state="+$("#state").val()+"&property_type="+$("#property_type").val()+"&beds="+$("#beds").val()+"&baths="+$("#baths").val()+"&minimo="+$("#minimo").val()+"&maximo="+$("#maximo").val()+"&id_cliente="+$("#id_cliente").val()}var selecionados="";$('.tabela_imoveis input[type="checkbox"]').click(function () {    var action="add";    if($(this).prop("checked")==false){        action="remove";    }    $(".close").click();    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function() {        if (this.readyState == 4 && this.status == 200) {            $.bootstrapGrowl(this.responseText, {                ele: 'body',                align: 'center', // ('left', 'right', or 'center')                type: "info",                delay: 1800000,                allow_dismiss: true,                offset: {from: 'bottom', amount: 1}            });        }    };    xmlhttp.open("GET", "../mod_imoveis/_selecionar_imoveis.php?id_cliente=" + $("#id_cliente").val()+"&imovel="+$(this).val()+"&action="+action, true);    xmlhttp.send();});function limparImoveis() {    $(".close").click();    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function() {        if (this.readyState == 4 && this.status == 200) {            $.bootstrapGrowl(this.responseText, {                ele: 'body',                align: 'center', // ('left', 'right', or 'center')                type: "info",                delay: 1800000,                allow_dismiss: true,                offset: {from: 'bottom', amount: 1}            });        }    };    xmlhttp.open("GET", "../mod_imoveis/_selecionar_imoveis.php?id_cliente=" + $("#id_cliente").val()+"&action=limpar", true);    xmlhttp.send();}function criarNovoItem(checkbox,existente,novo) {    if(existente=="id_cliente"){        $("#criar_novo_responsavel").prop("checked",true);        criarNovoItem($("#criar_novo_responsavel"),'id_responsavel','nome_responsavel,email,contacto,contacto_alternativo,nif,morada,cod_post,localidade')    }    novo=novo.split(",");    if($(checkbox).prop("checked")==true){        for(var i =0;i<novo.length;i++){            $("#"+novo[i]).prop("disabled",false);            $("#"+novo[i]).prop("readonly",false);        }        $("#"+existente).prop("disabled",true);        $("#"+existente).prop("readonly",true);    }else{        for(var i =0;i<novo.length;i++){            $("#"+novo[i]).prop("disabled",true);            $("#"+novo[i]).prop("readonly",true);        }        $("#"+existente).prop("disabled",false);        $("#"+existente).prop("readonly",false);    }}function verificarUtilizador(val) {    $("#icon-autopreencherdados").html("<i class='fa fa-spinner fa-spin'></i>");    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function() {        if (this.readyState == 4 && this.status == 200) {            if(this.responseText!=0){                $("#icon-autopreencherdados").html("<i class='fa fa-check text-success'></i>");                $("#text-autopreencherdados").html("Utilizador encontrado. <a href='javascript:void(0)' onclick='preencher_dados_formulario("+this.responseText+")' class='text-success'> <u>Preencher o formulário</u></a>");            }else{                $("#icon-autopreencherdados").html("<i class='fa fa-info-circle'></i>");                $("#text-autopreencherdados").html("Não encontrado. <span class='text-info'>Será criada uma conta de utilizador nova.</span>");            }        }    };    xmlhttp.open("GET", "../utilizadores/_verifica_utilizador.php?email=" + val, true);    xmlhttp.send();}function preencher_dados_formulario(id_utilizador) {    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function() {        if (this.readyState == 4 && this.status == 200) {            var r=JSON.parse(this.responseText);            $("#responsavel").val(r.nome_utilizador);            $("#contacto").val(r.contacto);            $("#contacto_alternativo").val(r.contacto_alternativo);            $("#email").val(r.email);            $("#morada").val(r.morada);            $("#cod_post").val(r.cod_post);            $("#localidade").val(r.localidade);            $("#nif").val(r.nif);        }    };    xmlhttp.open("GET", "../utilizadores/_dados_utilizador.php?id_utilizador=" + id_utilizador, true);    xmlhttp.send();}function mostrarEsconder(id) {    $("#"+id).slideToggle("slow");}function mostrarSeChecked(elem,cheked) {    if(cheked==true){        $(elem).show();    }else{        $(elem).hide();    }}function mostrarSeNaoChecked(elem,cheked) {    if(cheked==true){        $(elem).hide();    }else{        $(elem).show();    }}function atualizarPorPax(elem,id_simulacao,id_fornecedor,btn) {    var click=$(btn).attr("onclick");    $(btn).attr("onclick","");    var html=$(btn).html();    $(btn).html("<i class='fa fa-spinner fa-spin'></i>");    var por_pessoa=$("#"+elem).val();    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function() {        if (this.readyState == 4 && this.status == 200) {            if(this.responseText==0){                growlNot("success","Sucesso!");                $(btn).html(html);                $(btn).attr("onclick",click);            }else{                growlNot("danger",this.responseText);                $(btn).html(html);                $(btn).attr("onclick",click);            }        }    };    xmlhttp.open("GET", "_atualizar_preco_pax.php?id_simulacao=" + id_simulacao+"&id_fornecedor="+id_fornecedor+"&por_pessoa="+por_pessoa, true);    xmlhttp.send();}function abrirModalPagar(id_utilizador,id_simulacao,btn){    var click=$(btn).attr("onclick");    $(btn).attr("onclick","");    var html=$(btn).html();    $(btn).html("<i class='fa fa-spinner fa-spin'></i>");    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function() {        if (this.readyState == 4 && this.status == 200) {            $("#modal-pagar-content").html(this.responseText);            $("#modal-pagar").modal("show");            $(btn).html(html);            $(btn).attr("onclick",click);        }    };    xmlhttp.open("GET", "_modal_pagar.php?id_simulacao=" + id_simulacao+"&id_utilizador="+id_utilizador, true);    xmlhttp.send();}function addCategoria(btn){    $("#categorias").append($(btn).attr("data-linha"));}function addItem(btn,id){    $("#"+id).append($(btn).attr("data-linha"));    $(".select-select2").select2();}//calculos e formasfunction preencher_valor_pax(select,id_categoria){    var valor_pax=$(select).find(':selected').attr('data-valorpax');    $(select).parent().parent().find(".valor_pax").val(valor_pax);    somarCompostos(id_categoria);}function somarCompostos(id_categoria){    var soma=0;    $(".valor_pax").each(function(){        soma+=$(this).val()*1;    });    $("#valor_categoria"+id_categoria).val(soma).trigger("change");    calcular_frees();}function calcular_valor_noites() {    var pax,noites,ppc,valor_noites;    pax=$("#pax").val();    noites=$("#noites").val();    ppc=$("#"+$("#Regime").val()).val();    valor_noites=ppc*noites;    $(".valor_noites").val(valor_noites); // esta classe é colocado no elemento que tem "noites" ativado no backoffice (código em criar_editar_detalhes)    calcular_frees();}function calcular_num_noites(){    var data_inicio,data_fim;    data_inicio=$("#partida").val();    data_fim=$("#chegada").val();    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function() {        if (this.readyState == 4 && this.status == 200) {            $("#noites").val(this.responseText);            calcular_valor_noites();        }    };    xmlhttp.open("GET", "_calcular_num_noites.php?data_inicio=" + data_inicio+"&data_fim="+data_fim, true);    xmlhttp.send();}function calcular_frees(){    calcular_subtotal();    var frees,free_em,num_frees,pax;    pax=$("#pax").val();    frees=$("#frees").val();    free_em=$("#free_em").val();    if(frees!="" && free_em!=""){        num_frees=(pax/free_em*frees);        num_frees=num_frees.toFixed(2);    }else{        num_frees=0;    }    $("#num_frees").val(num_frees);    if(num_frees*1>=1){        var valor_total_frees=$("#subtotal").html()*1/free_em;        $("#valorTotalFrees").html(valor_total_frees.toFixed(2));    }    calcular_subtotal2()}function calcular_subtotal(){    var subtotal=0;    $(".valor_categoria").each(function () {        subtotal+=$(this).val()*1;    });    $("#subtotal").html(subtotal.toFixed(2));}function calcular_subtotal2() {    var subtotal2 = $("#subtotal").html()*1+$("#valorTotalFrees").html()*1;    $("#subtotal2").html(subtotal2.toFixed(2));    calcular_escort($("#escort").prop("checked"));    calcular_total();}function calcular_total() {    var total,subtotal2,lucro,escort;    subtotal2=$("#subtotal2").html()*1;    lucro=$("#lucro").val()*1;    escort=$("#escorts_valor").val()*1;    total=(subtotal2*1)+(lucro*1)+(escort*1);    $("#total").val(total.toFixed(2));}function calcular_escort(checked) {    var escorts_valor=0;    if(checked==true){        var pax=$("#pax").val();        var subtotal=$("#subtotal").html()*1;        escorts_valor=subtotal/pax;        escorts_valor=escorts_valor.toFixed(2);    }    $("#escorts_valor").val(escorts_valor);}function editarHistorico(id,data,comentario) {    $("#id_historico").val(id);    $("#data_comentario").val(data);    $("#comentario").val(comentario);    $("#modal_novo_historico").modal("show");}function limparCamposHistorico() {    $("#id_historico").val(0);    $("#comentario").val("");}function inserirGrupo(id) {    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function() {        if (this.readyState == 4 && this.status == 200) {            $("#noites").val(this.responseText);            calcular_valor_noites();        }    };    xmlhttp.open("GET", "editar.php?id=" + id+"&nome_grupo="+data_fim, true);    xmlhttp.send();}// Javascript to enable link to tabvar hash = document.location.hash;var prefix = "tab_";if (hash) {    $('.nav-tabs a[href="'+hash.replace(prefix,"")+'"]').tab('show');}// Change hash for page-reload$('.nav-tabs a').on('shown', function (e) {    window.location.hash = e.target.hash.replace("#", "#" + prefix);});$(".up,.down").click(function(){    var row = $(this).parents("tr:first");    if ($(this).is(".up")) {        row.insertBefore(row.prev());    } else {        row.insertAfter(row.next());    }});//retorna branco ou preto dependendo da cor que receber para contrastar melhor//This has a bw option that will decide whether to invert to black or white; so you'll get//more contrast which is generally better for the human eyefunction invertColor(hex, bw=1) {    if (hex.indexOf('#') === 0) {        hex = hex.slice(1);    }    // convert 3-digit hex to 6-digits.    if (hex.length === 3) {        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];    }    if (hex.length !== 6) {        throw new Error('Invalid HEX color.');    }    var r = parseInt(hex.slice(0, 2), 16),        g = parseInt(hex.slice(2, 4), 16),        b = parseInt(hex.slice(4, 6), 16);    if (bw) {        // http://stackoverflow.com/a/3943023/112731        return (r * 0.299 + g * 0.587 + b * 0.114) > 186            ? '#000000'            : '#FFFFFF';    }    // invert color components    r = (255 - r).toString(16);    g = (255 - g).toString(16);    b = (255 - b).toString(16);    // pad each with zeros and return    return "#" + padZero(r) + padZero(g) + padZero(b);}$ ( '.photo-gallery' ) . on ( 'click' , '.photo-gallery__figure' , function  ( e )  {    e . preventDefault ( ) ;    createPhotoSwipe ( e . currentTarget ) ;} ) ;$(".tab-link").click(function () {    var href=location.href.split("#");    location.href = href[0] + $(this).attr("href");});$(".tipoUser").each(function () {    var value= $(this).attr("data-value");    $(this).find('option[value="'+value+'"]').attr("selected",true);});$(".up,.down").click(function(){    var row = $(this).parents("tr:first");    if ($(this).is(".up")) {        row.insertBefore(row.prev());removerLinha    } else {        row.insertAfter(row.next());    }});/** MAPA */var   mymap = null;function initMap(markers,options,click){    //lat - long    if(mymap !== null) {        mymap.remove(); // should remove the map from UI and clean the inner children of DOM element        console.log(mymap); // nothing should actually happen to the value of mymap    }    mymap = L.map('mapid').setView([options.center.latitude, options.center.longitude], options.zoom);    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {        //attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',    }).addTo(mymap);    if(click==true){        var popup_click = L.popup();        function onMapClick(e) {            var lat=e.latlng.lat.toString();            var lng=e.latlng.lng.toString();            popup_click                .setLatLng(e.latlng)                .setContent("<i class='fa fa-map-marker'></i> "+e.latlng.toString()+"<br>" +                    "<a href='javascript:void(0)' onclick='editarLocalizacao("+lat+","+lng+")'><i class='fa fa-edit'></i> <b>Atualizar localização existente</b></a><br>" +                    "<a href='javascript:void(0)' class='' onclick='guardarLocalizacao("+lat+","+lng+")'><i class='fa fa-plus'></i> <b>Criar nova localização</b></a>" +                    "")                .openOn(mymap);        }        mymap.on('click', onMapClick);    }    markers.push(options.marker_center);    for(var i=0; i<markers.length;i++){        if (typeof markers[i] !== 'undefined') {            var marker = L.marker([markers[i].latitude,  markers[i].longitude]).addTo(mymap);            marker.bindPopup(markers[i].popup);            if(markers[i].open==1){                marker.openPopup();            }        }    }}function guardarLocalizacao(lat,long) {    $("#modal-nova-localizacao").modal('show');    $("#modal-latitude").val(lat);    $("#modal-longitude").val(long);}function editarLocalizacao(lat,long) {    $("#modal-editar-localizacao").modal('show');    $("#modal-editar-latitude").val(lat);    $("#modal-editar-longitude").val(long);}/*function getMarkers(idCliente,options,click){    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function() {        console.log(this.responseText);        if(this.responseText!=0){            var markers=JSON.parse(this.responseText);            var options={                zoom:6,                center: {latitude:40.34654412118006, longitude:-4.94384765625}                //marker_center: {latitude:41.157944, longitude:-8.629105, popup:"<a href='https://www.latlong.net/convert-address-to-lat-long.html'>PORTO!</a>",open:1},            };            if (this.readyState == 4 && this.status == 200) {                initMap(markers,options,click);            }        }    };    xmlhttp.open("GET", "../mod_srvcliente/_getMarkets.php?idCliente=" + idCliente, true);    xmlhttp.send();}*/function showPosition(position) {    $("#latitude").val(position.coords.latitude);    $("#longitude").val(position.coords.longitude);}function addLinha(btn,target) {    $(target).append($(btn).attr("data-linha"));    $('.select-select2').select2();    if(target == "#linhas-pecas"){        EditableSelect2($('.id_peca'));    }}function removerLinha(elem){    $(elem).parent().parent().remove();}/** MAPA */function classificarCliente(id_cliente,classificacao,elem) {    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function() {        if (this.readyState == 4 && this.status == 200) {            $(elem).parent().html(this.responseText);        }    };    xmlhttp.open("GET", "../mod_srvcliente/_classificar.php?id_cliente=" + id_cliente+"&classificacao="+classificacao, true);    xmlhttp.send();}//setup before functionsvar typingTimer;                //timer identifiervar doneTypingInterval = 500;  //time in ms, 5 seconds for examplevar $input = $('#searchbar');var $input2 = $('#searchbar2');//on keyup, start the countdown$input.on('keyup', function () {    clearTimeout(typingTimer);    typingTimer = setTimeout(doneTyping, doneTypingInterval);    $(".client-info").html("<h2 class='text-center text-muted'><i class='fa fa-spinner fa-spin'></i></h2>");});//on keydown, clear the countdown$input.on('keydown', function () {    clearTimeout(typingTimer);});//on keyup, start the countdown$input2.on('keyup', function () {    clearTimeout(typingTimer);    typingTimer = setTimeout(doneTyping2, doneTypingInterval);    $(".client-info2").html("<h2 class='text-center text-muted'><i class='fa fa-spinner fa-spin'></i></h2>");});//on keydown, clear the countdown$input2.on('keydown', function () {    clearTimeout(typingTimer);});//user is "finished typing," do somethingfunction doneTyping () {    var val="";    val=$('#searchbar').val();    getClientes(val);}//user is "finished typing," do somethingfunction doneTyping2 () {    var val="";    val=$('#searchbar2').val();    getClientes2(val);}function getClientes(val){    if(val.length > 2){        var xmlhttp = new XMLHttpRequest();        xmlhttp.onreadystatechange = function() {            if (this.readyState == 4 && this.status == 200) {                $(".client-info").html(this.responseText);            }        };        xmlhttp.open("GET", "../mod_inicio/dashboard.php?like=" + val, true);        xmlhttp.send();    }}function getClientes2(val){    if(val.length > 2){        var xmlhttp = new XMLHttpRequest();        xmlhttp.onreadystatechange = function() {            if (this.readyState == 4 && this.status == 200) {                $(".client-info2").html(this.responseText);            }        };        xmlhttp.open("GET", "../mod_inicio/index.php?like=" + val, true);        xmlhttp.send();    }}$('#modal-session #btn_confirmar_session').click(function (){    let email = $('#modal-session #login-email').val();    let password = $('#modal-session #login-password').val();    $.ajax({        type: 'POST',        url: '/login/entrar.php',        data:"login-email="+email+"&login-password="+password+"&token=",        success: function (response) {            if(response == "0"){                growlNot("success","Sucesso");                $('#modal-session #login-password').val('');                $('#modal-session').modal('hide');            }else{                growlNot("danger","Email ou password errados.");            }        }    });    return false;})checkSessionTimeout();setInterval(checkSessionTimeout, 30000); // 30 mil milisegundosfunction checkSessionTimeout(){    $.ajax({        //  url: "/checkSessionTimeout.php?check=1", //or your url        success: function(data){            // url= "/checkSessionTimeout.php";            var xmlhttp = new XMLHttpRequest();            xmlhttp.onreadystatechange = function() {                if (this.readyState == 4 && this.status == 200 && this.responseText == "1") {                    $('#modal-session').modal('show');                }            };            xmlhttp.open("GET","/checkSessionTimeout.php?check=1", true);            xmlhttp.send();        }    });}/** novo sistema de comentarios **/var saveComment = function(data) {    // Convert pings to human readable format    $(Object.keys(data.pings)).each(function(index, userId) {        var fullname = data.pings[userId];        var pingText = '@' + fullname;        data.content = data.content.replace(new RegExp('@' + userId, 'g'), pingText);    });    return data;}$('#comments-container').comments({    profilePictureURL: $("#profilePicURL").attr("src"),    scrollContainer: $("#comments-container"),    textareaPlaceholderText: 'Escreva um comentário',    newestText: 'Novos',    oldestText: 'Antigos',    popularText: 'Destaques',    attachmentsText: 'Com Anexos',    sendText: 'Comentar',    replyText: 'Responder',    editText: 'Editar',    editedText: 'Editado',    youText: 'Eu',    saveText: 'Guardar',    deleteText: 'Eliminar',    viewAllRepliesText: 'Mostar respostas (__replyCount__)',    hideRepliesText: 'Esconder',    noCommentsText: 'Sem comentários',    noAttachmentsText: 'Sem anexos',    attachmentDropText: 'Anexar ficheiros',    enableUpvoting: false,    enableAttachments: true,    enablePinging: true,    enableEditing: true,    enableDeleting: true,    roundProfilePictures: true,    postCommentOnEnter: false,    getComments: function(success, error) {        $.ajax({            type: 'get',            url: '../mod_notas/_get_comentarios.php?modulo='+$("#nomeTabelaComentarios").text()+"&idItem="+$("#idItemComentarios").text(),            success: function(commentsArray) {                console.log(commentsArray);                commentsArray=JSON.parse(commentsArray);                success(commentsArray);                init_apagar_anexos_editar();            },            error: error        });    },    searchUsers: function(term, success, error) {        $.ajax({            type: 'get',            url: '../mod_notas/_get_comentarios_utilizadores.php?search=' + term,            success: function(userArray) {                //console.log(userArray);                userArray=JSON.parse(userArray);                success(userArray)            },            error: error        });    },    validateAttachments: function(attachments, callback) {        $(attachments).each(function(index, attachment) {            var formData = new FormData();            formData.append('file', attachment.file);            $.ajax({                type: 'POST',                url: '../tmp_files_upload.php',                data: formData,                cache: false,                contentType: false,                processData: false,                method: 'POST',                success: function(upload) {                    if(upload==""){                        var validAttachments = [];                        validAttachments.push(attachment);                        callback(validAttachments);                        init_apagar_anexos();                    }                }            });        });    },    postComment: function(commentJSON, success, error) {        // Create form data and append all other fields but attachments        var formData = new FormData();        $(Object.keys(commentJSON)).each(function(index, key) {            if(key != 'attachments') {                var value = commentJSON[key];                if(key == 'pings') {                    value=JSON.stringify(commentJSON[key]);                }                if(value) formData.append(key, value);            }        });        formData.append("modulo", $("#nomeTabelaComentarios").text());        formData.append("id_item", $("#idItemComentarios").text());        // Save the comment together with the attachments        $.ajax({            type: 'POST',            url: '../mod_notas/_criar_comentario.php',            data: formData,            cache: false,            contentType: false,            processData: false,            method: 'POST',            success: function(comment) {                console.log(comment);                comment=JSON.parse(comment);                success(saveComment(comment));                init_apagar_anexos_editar();                $("#anexos_para_apagar").remove();            },            error: error        });    },    putComment: function(commentJSON, success, error) {        // Create form data and append all other fields but attachments        var formData = new FormData();        $(Object.keys(commentJSON)).each(function(index, key) {            if(key != 'attachments') {                var value = commentJSON[key];                if(key == 'pings') {                    value=JSON.stringify(commentJSON[key]);                }                if(value) formData.append(key, value);            }        });        formData.append("modulo", $("#nomeTabelaComentarios").text());        formData.append("id_item", $("#idItemComentarios").text());        formData.append("anexos_para_apagar",$("#anexos_para_apagar").val());        // Save the comment together with the attachments        $.ajax({            type: 'POST',            url: '../mod_notas/_editar_comentario.php',            data: formData,            cache: false,            contentType: false,            processData: false,            method: 'POST',            success: function(comment) {                comment=JSON.parse(comment);                success(saveComment(comment));                init_apagar_anexos_editar();                $("#anexos_para_apagar").remove();            },            error: error        });    },    deleteComment: function(data, success, error) {        $.ajax({            type: 'GET',            url: '../mod_notas/reciclar.php?id='+data.id,            method: 'GET',            success: function(apagar) {                $("#anexos_para_apagar").remove();                //console.log(apagar);            },        });        setTimeout(function() {            success();        }, 500);    },    refresh: function() {},    timeFormatter: function(time) {        return new Date(time).toLocaleDateString() + " " + new Date(time).toLocaleTimeString();    }});function init_apagar_anexos(){    $(".delete").each(function () {        var nome=$(this).parent().text();        $(this).attr("onclick",'apagar_anexo("'+nome+'")');    });}function apagar_anexo(nome) {    $.ajax({        type: 'GET',        url: '../tmp_files_delete.php?nome='+nome,        method: 'GET',        success: function(apagar) {            console.log(apagar);        },    });}function init_apagar_anexos_editar() {    $(".edit").click(function () {        setTimeout(function () {            $(".comment").each(function () {                if($(this).hasClass("edit")){                    $(this).prepend("<input type='hidden' id='anexos_para_apagar'>");                }                $(this).find(".delete").each(function () {                    var nome=$(this).parent().text();                    $(this).attr("onclick",'anexos_para_apagar("'+nome+'")');                });            });            init_remover_input_anexos_apagar();        },100);    });}function init_remover_input_anexos_apagar() {    $(".close").click(function () {        $("#anexos_para_apagar").remove();    });}function anexos_para_apagar(nome) {    $("#anexos_para_apagar").val($("#anexos_para_apagar").val()+","+nome);}/** novo sistema de comentarios **/    $("#btn_search_geral").click(function () {        $("#searchbar2").focus();    });function downloadPDFWithjsPDF(target,nome,o='p') {    var doc = new jspdf.jsPDF(o, 'pt', 'a4');    doc.html(document.querySelector(target), {        callback: function (doc) {            doc.save(nome+'.pdf');        },    });}function atualizarData(id,btn) {    var data=($("#encomenda"+id).val());    $(btn).html("<i class='fa fa-spinner fa-spin'></i>");    if(data!=""){        var xmlhttp = new XMLHttpRequest();        xmlhttp.onreadystatechange = function () {            if (this.readyState == 4 && this.status == 200) {                $(btn).html("<i class='fa fa-check'></i>");                setTimeout(function(){ $(btn).html("<i class='fa fa-save'></i>") }, 1000);                growlNot("success", "Atualizado");            }        };        xmlhttp.open("GET", "../mod_pedidos_encomenda/editar.php?id=" + id+"&data="+data, true);        xmlhttp.send();    }else{        $(btn).html("<i class='fa fa-times'></i>");        setTimeout(function(){ $(btn).html("<i class='fa fa-save'></i>") }, 1000);        growlNot("warning", "Insira uma data válida");    }}function addAssistCliente(elem){    $( ".iniciar-assistencia-btn").unbind( "click" );    $('#modal-iniciar-assistencia').modal('show');    if(!$(elem).hasClass('linha')){ // SE NAO TIVER CLASSE LINHA, OU SEJA, ESTA A SER CLICADO NO BOTAO DE CRIAR ASSISTENCIA INTERNA OU EXTERNA         // AJAX CREATE ASSISTENCIA E COLOCA LOGO EM EXECUCAO    }    let linha_assistencia = $(elem);    let id_assistencia = linha_assistencia.attr('id_assistencia');    $(".aviso-assistencias-por-terminar").html("<h3 class='text-muted text-center'><i class='fa fa-spinner fa-spin'></i><br><small>Validar se tem serviços por terminar...</small></h3>");    $(".iniciar-assistencia-btn").hide();    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function () {        if (this.readyState == 4 && this.status == 200) {            $(".aviso-assistencias-por-terminar").html(this.responseText);            $(".iniciar-assistencia-btn").show();        }    };    xmlhttp.open("GET", "../mod_inicio/_verSeTemAssistenciasPorTerminar.php?id_assistencia=" + id_assistencia, true);    xmlhttp.send();    $('.iniciar-assistencia-btn').click(function (){        addAssistClienteAjax(linha_assistencia, id_assistencia);    })}function verSeTemAssistenciasPorTerminar(id_cliente) {    $(".aviso-assistencias-por-terminar").html("<h3 class='text-muted text-center'><i class='fa fa-spinner fa-spin'></i><br><small>Validar se tem serviços por terminar...</small></h3>");    $("#modal-adicionar-paragem .btn-submit").hide();    $(".info_adicional_paragem").hide();    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function () {        if (this.readyState == 4 && this.status == 200) {            $(".aviso-assistencias-por-terminar").html(this.responseText);            $("#nenhuma_das_acima").prop("checked",true);            $("#nehuma_cat").prop("checked",true);            mostrarSeChecked('.categorias_e_descricao', $("#nenhuma_das_acima").prop("checked"));            $(".info_adicional_paragem").show();            $("#modal-adicionar-paragem .btn-submit").show();        }    };    xmlhttp.open("GET", "../mod_inicio/_verSeTemAssistenciasPorTerminar.php?id_cliente=" + id_cliente, true);    xmlhttp.send();}function addAssistClienteAjax(linha_assistencia, id_assistencia){    // ADD LINHA NAS ASSISTENCIAS INICIADAS    let data_inicio = $('#modal-iniciar-assistencia #data_inicio').val();    var id_pai=0;    $(".ids-assistencias-por-terminar").each(function () {        if($(this).prop("checked")==true){            id_pai=$(this).val();        }    });    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function () {        if (this.readyState == 4 && this.status == 200 ) {            growlNot("success", "Atualizado");            $('.assistencias-clientes').append(this.responseText);            linha_assistencia.remove();            if(!$('.linha-assistencia')[0]){                $('.sem-dados-agenda').show('500');            }            $('.sem-dados-assistencias_iniciadas').hide();            //growlNot("success", "Atualizado");            $('#modal-iniciar-assistencia  > .modal-dialog > .modal-content > .modal-header > .close').trigger('click');        }    };    xmlhttp.open("GET", "../mod_inicio/dashboard.php?id_assistencia=" + id_assistencia+"&data_inicio="+data_inicio+"&id_pai="+id_pai, true);    xmlhttp.send();    // REMOVER DA AGENDA}function terminarAssistenciaModal(elem){    $('#modal-terminar-assistencia').modal('show');    let id_assistencia = $(elem).parent().parent().attr('id_assistencia');    let linha = $(elem).parent().parent();    $( ".terminar-assistencia-btn").unbind( "click" );    $('.terminar-assistencia-btn').click(function (){        terminarAssistenciaAjax(id_assistencia, linha);    });    $(".terminar-assistencia-btn").hide();    //validar tipo de assistencia e buscar os kms    //se for interna não pedir KM's    $(".info_viatura_e_kms").html("<h3 class='text-center text-muted'><i class='fa fa-spinner fa-spin'></i><br>Obter info da viatura..</h3>");    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function () {        if (this.readyState == 4 && this.status == 200) {            $(".info_viatura_e_kms").html(this.responseText);            $(".terminar-assistencia-btn").show();        }    };    xmlhttp.open("GET", "/mod_inicio/_validarTipoAssistenciaMaisKms.php?id_assistencia="+id_assistencia, true);    xmlhttp.send();    $('#modal-terminar-assistencia #id_assistencia_modal').val(id_assistencia)}function overrideMaxKms() {    $(".override_max_kms").val("1");    $(".terminar-assistencia-btn").click();}function terminarAssistenciaAjax(id_assistencia, linha){    let kilometros = $('#modal-terminar-assistencia #kilometros').val()*1;    let min_kilometros = $('#modal-terminar-assistencia #kilometros').attr("data-min")*1;    let max_kilometros = $('#modal-terminar-assistencia #kilometros').attr("data-max")*1;    let override_max_kms=$(".override_max_kms").val();    let data_fim = $('#modal-terminar-assistencia #data_fim').val();    let externa = $('#modal-terminar-assistencia #tipo_assistencia_fechar_assist').val();    if(data_fim==""){        growlNot("danger","Preencha a hora de fim","center","bottom");        return;    }    if(externa==1){        if(kilometros==""){            growlNot("danger","Preencha os KM's","center","bottom");            return;        }        if(kilometros<min_kilometros){            growlNot("danger","KM's não podem ser inferiores a "+min_kilometros,"center","bottom");            return;        }        if(kilometros>max_kilometros && override_max_kms==0){            growlNot("warning","A viatura tem mesmo <b class='text-danger'>"+kilometros.toLocaleString('en')+"</b> km's?<br><a href='javascript:void(0)' onclick='overrideMaxKms()' class='btn btn-default btn-sm'>Sim, guardar!</a> <a class='btn btn-default btn-sm' href='javascript:void(0)' onclick='closeGrowl()'>Vou corrigir.</a>","center","bottom",30000,true);            return;        }    }    //validar tipo de assistencia    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function () {        if (this.readyState == 4 && this.status == 200 ) {            if(this.responseText == "0"){                growlNot("danger","Por favor, verifique as assinaturas.","center","bottom");                return;            }            growlNot("success", "Atualizado");            linha.animate({                height: "toggle"            }, 700, function() {                // Animation complete.                linha.remove();                if(!$('.linha-assistencia-clientes')[0]){                    $('.sem-dados-assistencias_iniciadas').show('500');                }            });            let perc = this.responseText;            setTimeout(function (){                if(perc > 0){                    if(perc > 100){                        perc = 100;                    }                    $('.grafico-eficiencia .progress-bar').prop('style','width:'+perc+'%');                    $('.grafico-eficiencia .progress-bar').text(perc+'%');                    if(perc >= 80){                        $('.grafico-eficiencia .progress-bar').addClass('progress-bar-success').removeClass('progress-bar-danger');                    }                }            }, 700)            $('#modal-terminar-assistencia > .modal-dialog > .modal-content > .modal-header > .close').trigger('click');        }    };    xmlhttp.open("GET", "../mod_inicio/dashboard.php?terminar_assistencia=" + id_assistencia+'&kilometros='+kilometros+'&data_fim='+data_fim, true); // +'&kilometros='+kilometros    xmlhttp.send();}function addParagemClienteModal(elem){    $(".aviso-assistencias-por-terminar").html("");    $("#modal-adicionar-paragem .btn-submit").hide();    $('#modal-adicionar-paragem').modal('show');    var id_cliente=$('#modal-adicionar-paragem #id_cliente').val();    if(id_cliente!=""){        verSeTemAssistenciasPorTerminar(id_cliente);    }}function addAssistClienteMaquina(elem, pesquisa=0){    $('html').attr('pesquisa',pesquisa);    $('#modal-mostrar-maquinas').modal('show');    let id_assistencia_cliente = $(elem).attr('id_assistencia_cliente');    $('#modal-mostrar-maquinas #id_assistencia_cliente_modal').val(id_assistencia_cliente);    mostrarMaquinasAssistenciaCliente(id_assistencia_cliente, pesquisa);}function addMaquinaModal(elem){    //$('#modal-mostrar-maquinas .modal-body > div:not(.modal)').addClass('add-opacity');    $('#modal-adicionar-maquinas').modal('show');    let id_assistencia_cliente = $(elem).parent().parent().find('.linha-assistencia-cliente-maquina').attr('id_assistencia_cliente');    $('#modal-adicionar-maquinas .id_assistencia_cliente_modal').val(id_assistencia_cliente)    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function () {        if (this.readyState == 4 && this.status == 200) {            $('#modal-adicionar-maquinas #id_maquina').html(this.responseText);            $('.select-select2').select2();        }    };    xmlhttp.open("GET", "../mod_inicio/dashboard.php?adicionar_maquina&id_assistencia_cliente="+id_assistencia_cliente, true);    xmlhttp.send();}function addParagemCliente(){    // ADD PARAGEM    let hora_inicio = $('#modal-adicionar-paragem #data_inicio_add_paragem').val();    let id_cliente = $('#modal-adicionar-paragem #id_cliente').val();    if(id_cliente==""){        growlNot("danger", "Selecione o cliente.","left","bottom");        return;    }    if(hora_inicio==""){        growlNot("danger", "Preencha a hora de início","center","bottom");        return;    }    var id_pai=0;    $(".ids-assistencias-por-terminar").each(function () {        if($(this).prop("checked")==true){            id_pai=$(this).val();        }    });    var externa=0;    $(".tipo_paragem").each(function () {        if($(this).prop("checked")==true){            externa=$(this).val();        }    });    var id_assistencia_aproveitar=0;    $(".ids-marcacoes-aproveitar").each(function () {        if($(this).prop("checked")==true){            id_assistencia_aproveitar=$(this).val();        }    });    var id_categoria=0;    $(".categorias_paragem").each(function () {        if($(this).prop("checked")==true){            id_categoria=$(this).val();        }    });    var obs_marcacao=$("#obs_marcacao").val();    if(CheckNullUndefined(id_cliente)){        growlNot("danger", "Selecione o cliente.","center","bottom");        return;    }    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function () {        if (this.readyState == 4 && this.status == 200) {            let linha = this.responseText;            $(".assistencias_iniciadas").append(linha);            growlNot("success", "Atualizado");            $('#modal-adicionar-paragem > .modal-dialog > .modal-content > .modal-header > .close').trigger('click');            $(".sem-dados-assistencias_iniciadas").hide();        }    };    xmlhttp.open("GET", "../mod_inicio/dashboard.php?adicionar_paragem=1&hora_inicio=" + hora_inicio + "&id_cliente="+id_cliente+"&externa="+externa+"&id_pai="+id_pai+"&id_assistencia_aproveitar="+id_assistencia_aproveitar+"&id_categoria="+id_categoria+"&obs_marcacao="+obs_marcacao, true);    xmlhttp.send();    ///$('#modal-adicionar-paragem .close').trigger('click');   // $('#modal-adicionar-paragem').modal('hide');}function contador_segundos() {    setInterval(function () {        $(".tempoLigado").each(function () {            var segundos=$(this).attr("data-segundos")*1;            segundos++;            var s=segundos;            var h=0;            var m=0;            while(s>=60){                m++;                s-=60;            }            while(m>=60){                h++;                m-=60;            }            if(h<10){                h="0"+h;            }            if(m<10){                m="0"+m;            }            if(s<10){                s="0"+s;            }            var str=" "+h+":"+m+":"+s;            $(this).html(str);            $(this).attr("data-segundos",segundos);        });    },1000);}contador_segundos();function addMaquina(){    // ADD PARAGEM    let id_assistencia_cliente = $('#modal-adicionar-maquinas .id_assistencia_cliente_modal').val();    let id_maquina = $('#modal-adicionar-maquinas #id_maquina').val();    if(CheckNullUndefined(id_maquina)){            growlNot("danger","Selecione a máquina.","center","bottom");            return;    }    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function () {        if (this.readyState == 4 && this.status == 200) {            console.log(this.responseText);            if(this.responseText==0){                getListaMaquinasAssistencia(id_assistencia_cliente);                $('#modal-adicionar-maquinas > .modal-dialog > .modal-content > .modal-header > .close').trigger('click');            }else{                growlNot("danger",this.responseText)            }        }    };    xmlhttp.open("GET", "../mod_inicio/dashboard.php?adicionar_maquina=" + id_assistencia_cliente + "&id_maquina="+id_maquina, true);    xmlhttp.send();    //$('#modal-adicionar-maquinas .close').trigger('click');}function mostrarMaquinasAssistenciaCliente(id_assistencia_cliente, pesquisa){    $('#modal-mostrar-maquinas .modal-body').html("<div class='loader-ajax'><h3 class='text-center text-muted'><i class='fa fa-spinner fa-spin'></i> <br> Aguarde..</h3></div>");    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function () {        if (this.readyState == 4 && this.status == 200) {            let content = this.responseText;            $('#modal-mostrar-maquinas .modal-body').html(content);            if(pesquisa==1){                $('#modal-mostrar-maquinas .modal-body textarea').prop("disabled",true);            }            let latText = document.getElementById("latitude");            let longText = document.getElementById("longitude");            navigator.geolocation.getCurrentPosition((position) => {                latText.value = position.coords.latitude;                longText.value = position.coords.longitude;            });            $('.select-select2').select2();            $('#modal-assinatura_assistencia').modal('show');            var wrapper = document.getElementById("signature-pad");            var canvas = wrapper.querySelector("canvas");            var signaturePad = new SignaturePad(canvas, {                backgroundColor: 'rgb(255,255,255)',                penColor: '#000F55',                drawOnly: true,                bgColour: '#FFF',                defaultAction: 'drawIt',                lineWidth: 0,            });            var cancelButton = document.getElementById('clear');            cancelButton.addEventListener('click', function (event) {                signaturePad.clear();            });            function resizeCanvas() {                var ratio =  Math.max(window.devicePixelRatio || 1, 1);                canvas.width = canvas.offsetWidth * ratio;                canvas.height = canvas.offsetHeight * ratio;                canvas.getContext("2d").scale(ratio, ratio);                signaturePad.clear();            }//window.onresize = resizeCanvas;            resizeCanvas();            function validarAssinatura(){                $("#assinatura").val(signaturePad.toDataURL("image/jpeg"));            }            $('#modal-assinatura_assistencia').modal('hide');            $('.assinar').click(function (){                let id_assistencia_cliente = $('#modal-assinatura_assistencia #id_assistencia_cliente_modal').val();                //let horas_assistencia = $('#modal-assinatura_assistencia #horas_assistencia').val();//                let hora_fim=$('#modal-assinatura_assistencia #data_fim_assinar_paragem').val();                let tipo_assistencia = $('#modal-assinatura_assistencia #tipo-assistencia').val();                let nome_assinatura = $('#modal-assinatura_assistencia #nome_assinatura').val();                let latitude = $('#modal-assinatura_assistencia #latitude').val();                let longitude = $('#modal-assinatura_assistencia #longitude').val();                var comercial=$('#modal-assinatura_assistencia #comercial').val();                if(nome_assinatura=="" && comercial==0){                    growlNot("danger","Insira nome da assinatura","center","bottom");                    return;                }                if(hora_fim==""){                    growlNot("danger","Insira hora de fim do serviço.","center","bottom");                    return;                }                if(signaturePad.isEmpty()==true && comercial==0){                    growlNot("danger","Falta assinatura","center","bottom");                    return;                }                let kilometros = $('#modal-assinatura_assistencia #kilometros').val();                let tempo_viagem = $('#modal-assinatura_assistencia #tempo_viagem').val();                let tempo_pausa=$('#modal-assinatura_assistencia #tempo_pausa').val();                if(tipo_assistencia==1 && comercial==0){ //se a assistencia for externa=1 validamos os kms e o tempo de viagem                    if(kilometros=="" || kilometros==0){                        growlNot("danger","Insira os km's","center","bottom");                        return;                    }                    if(tempo_viagem=="" || tempo_viagem=="00:00"){                        growlNot("danger","Insira o tempo de viagem","center","bottom");                        return;                    }                }                let servico_concluido = $('#modal-assinatura_assistencia #servico_concluido').prop("checked");                var por_terminar=0;                if(servico_concluido==true){                    por_terminar=0;                }else{                    por_terminar=1;                }                let id_contrato=0;                $(".ids_pacotes_horas").each(function () {                    if($(this).prop("checked")==true){                        id_contrato=$(this).val();                    }                });                let data_proxima_visita = $('#modal-assinatura_assistencia #data_proxima_visita').val();                let signature = signaturePad.toDataURL("image/jpeg");                let linhas_emails = [];                let i=0;                let enviar_email = 0;                let substituir_assinatura = 0;                if($('.enviar-email').is(':checked')){                    enviar_email=1;                }                if($('.substituir-assinatura').is(':checked')){                    substituir_assinatura=1;                }                $('#linhas-emails .linha').each(function (){                    let email = $(this).find('.email').val();                    linhas_emails.push(email);                });                $(this).hide();                $("#assinar-aguarde").show();                $.ajax({                    type: "POST",                    data: {                        emails:linhas_emails,                        id_assistencia_cliente:id_assistencia_cliente,                        assinatura:signature, terminar_assistencia:'1',                        enviar_email:enviar_email,                        substituir_assinatura:substituir_assinatura,                        kilometros:kilometros,                        tempo_viagem:tempo_viagem,                        nome_assinatura:nome_assinatura,                        //horas_assistencia:horas_assistencia,                        hora_fim:hora_fim,                        por_terminar:por_terminar,                        id_contrato:id_contrato,                        latitude:latitude,                        longitude:longitude,                        tempo_pausa:tempo_pausa,                        data_proxima_visita:data_proxima_visita                    },                    url: "../mod_inicio/dashboard.php",                    success: function(msg){                        console.log(msg);                        $(this).show();                        $("#assinar-aguarde").hide();                        if(isInt(msg)){                            var perc=msg;                            if(perc > 0){                                if(perc > 100){                                    perc = 100;                                }                                $('.grafico-eficiencia .progress-bar').prop('style','width:'+perc+'%');                                $('.grafico-eficiencia .progress-bar').text(perc+'%');                                if(perc >= 80){                                    $('.grafico-eficiencia .progress-bar').addClass('progress-bar-success').removeClass('progress-bar-danger');                                }                            }                            growlNot("success", "<small>Sucesso!</small>");                            let random = randomIntFromInterval(0, 9999);                            setTimeout(function (){                                $('.assinatura-atual-img').removeAttr('src');                                $('.assinatura-atual-img').attr('src','/_contents/assistencias_clientes/assinatura_'+id_assistencia_cliente+'/assinatura.jpg?rand='+random);                              // alert($('.assinatura-atual-img').attr('src'));                                signaturePad.clear();                            },600);                            $('[id_assistencia_cliente="'+id_assistencia_cliente+'"]').remove();                            $('#modal-mostrar-maquinas > .modal-dialog > .modal-content > .modal-header > .close').trigger('click');                            $('#modal-assinatura_assistencia > .modal-dialog > .modal-content > .modal-header > .close').trigger('click');                        }else{                            growlNot("warning", "Ocorreu um erro. Por favor contacte o suporte.");                        }                    }                });            });            setModalClicks();            if($('html').attr('pesquisa') == "1"){                $('.modal a.btn-info, .modal .adicionar-maquina a, .modal .add-linha, #clear, .modal .modal-header a.pull-right, .remove-linha a').hide();            }else{                $('.modal a.btn-info, .modal .adicionar-maquina a, .modal .add-linha, #clear, .modal .modal-header a.pull-right, .remove-linha a').show();            }        }    }    xmlhttp.open("GET", "../mod_inicio/dashboard.php?mostrar_maquinas=" + id_assistencia_cliente+"&pesquisa="+pesquisa, true);    xmlhttp.send();}function colocarEmPausa(id_assistencia_cliente) {    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function () {        if (this.readyState == 4 && this.status == 200 ) {            if(this.responseText=='em-pausa'){                $(".bloco-terminar-assinar").hide();                $(".bloco-pausa").hide();                $(".bloco-play").show();                $(".assistencia"+id_assistencia_cliente).removeClass("tempoLigado");                $(".icon_pausa"+id_assistencia_cliente).removeClass("fa-play").removeClass("text-success").addClass("fa-pause").addClass("text-warning");            }else{                $(".bloco-terminar-assinar").show();                $(".bloco-pausa").show();                $(".bloco-play").hide();                $(".assistencia"+id_assistencia_cliente).addClass("tempoLigado");                $(".icon_pausa"+id_assistencia_cliente).removeClass("fa-pause").removeClass("text-warning").addClass("fa-play").addClass("text-success");            }        }    };    xmlhttp.open("GET", "../mod_inicio/_colocarEmPausa.php?id_assistencia_cliente=" + id_assistencia_cliente, true);    xmlhttp.send();}function isInt(value) {    return !isNaN(value) &&        parseInt(Number(value)) == value &&        !isNaN(parseInt(value, 10));}function updateInput(elem, id, tabela, modal="", loopInput= "0",mostrarNot=1){    if(loopInput == "1"){        $(elem).find('input').each(function (){            let input = $(this);            updateInput(input, id, tabela, "", 0);        })        $(elem).find('textarea').each(function (){            let input = $(this);            updateInput(input, id, tabela, "", 0);        })        return;    }    let coluna = $('.modal').find(elem).attr('name');    let value = $('.modal').find(elem).val();    if(value == "on"){       if($(elem).is(':checked')){           value=1       }else{           value=0;       }    }    if(value=="" || value == "undefined" || value == undefined){        value = $('.modal').find(elem).text();    }    let name_value = $('.modal').find(elem).find('option:selected').attr('name_value'); // NOME DO ID VALUE    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function () {        if (this.readyState == 4 && this.status == 200 ) {            if(mostrarNot==1){                growlNot("success", "<i class='fa fa-check'></i>Atualizado","left","bottom",200);            }            if(modal != ""){                $(modal +' > .modal-dialog > .modal-content > .modal-header > .close').trigger('click');            }            if(tabela == "estados_viaturas_linhas"){                let class_btn="";                if(value == "1"){ // Em funcionamento                    class_btn="btn-success";                }                else if(value == "2"){ // AVARIADA                    class_btn="btn-danger";                }else if(value == "3"){ // Reparação                    class_btn="btn-info";                }                $('.estado-viatura-btn').removeClass('btn-info');                $('.estado-viatura-btn').removeClass('btn-success');                $('.estado-viatura-btn').removeClass('btn-danger');                $('.estado-viatura-btn').html('Estado <br>('+name_value+')').addClass(class_btn);            }        }    };    xmlhttp.open("GET", "../mod_inicio/dashboard.php?value=" + value + "&coluna="+coluna+ "&tabela="+tabela+ "&id="+id, true);    xmlhttp.send();}function OpenModalAddMaquina(elem){    $('#modal-mostrar-detalhes-maquina').modal('show');    let id_assistencia_cliente_maquina = $(elem).attr('id_assistencia_cliente_maquina');    let id_maquina = $(elem).attr('id_maquina');    $('#modal-mostrar-detalhes-maquina #id_assistencia_cliente_maquina_modal').val(id_assistencia_cliente_maquina);    $('#modal-mostrar-detalhes-maquina #id_maquina').val(id_maquina);    OpenModalAddMaquinaAjax(id_assistencia_cliente_maquina);}function OpenModalAddMaquinaAjax(id_assistencia_cliente_maquina){    $('#modal-mostrar-detalhes-maquina .modal-body').html("<h3 class='text-center text-muted'><i class='fa fa-spinner fa-spin'></i><br>Aguarde..</h3>");    var pesquisa=0;    if($("#veio-da-pesquisa")){        pesquisa=$("#veio-da-pesquisa").val();    }    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function () {        if (this.readyState == 4 && this.status == 200) {            let content = this.responseText;            $('#modal-mostrar-detalhes-maquina .modal-body').html(content);            if(pesquisa==1){                $('#modal-mostrar-detalhes-maquina .modal-body input').prop("disabled",true);                $('#modal-mostrar-detalhes-maquina .modal-body textarea').prop("disabled",true);            }            EditableSelect2($('.id_peca'));            if($('html').attr('pesquisa') == "1"){                $('.modal a.btn-info, .modal .adicionar-maquina a, .modal .add-linha, #clear, .modal .modal-header a.pull-right, .remove-linha a').hide();            }else{                $('.modal a.btn-info, .modal .adicionar-maquina a, .modal .add-linha, #clear, .modal .modal-header a.pull-right, .remove-linha a').show();            }            $('.select-select2').select2();            setModalClicks();        }    }    xmlhttp.open("GET", "../mod_inicio/dashboard.php?mostrar_detalhes_maquina=" + id_assistencia_cliente_maquina+"&pesquisa="+pesquisa, true);    xmlhttp.send();}function nullUpdateInput(v1, v2, v3, v4="", v5= "0",v6=1) {    return;}function getListaMaquinasAssistencia(id_assistencia_cliente,wait=0){    $('.linha-assistencia-cliente-maquina').html("<h3 class='text-center text-muted'><i class='fa fa-spinner fa-spin'></i><br>Aguarde..</h3>");    setTimeout(function () {        var xmlhttp = new XMLHttpRequest();        xmlhttp.onreadystatechange = function () {            if (this.readyState == 4 && this.status == 200) {                let content = this.responseText;                $('.linha-assistencia-cliente-maquina').html(content);            }        };        xmlhttp.open("GET", "/mod_inicio/_getListaMaquinasAssistencia.php?id_assistencia_cliente=" + id_assistencia_cliente, true);        xmlhttp.send();    },wait);}/*function atualizarPecas(id_assistencia_cliente_maquina){    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function () {        if (this.readyState == 4 && this.status == 200) {            growlNot("success", "Atualizado");        }    };    xmlhttp.open("GET", "../mod_inicio/dashboard.php?atualizar_pecas=" + id_assistencia_cliente_maquina, true);    xmlhttp.send();}*/function atualizarPecas(id_assistencia_cliente_maquina){    let linhas_pecas = [];    let array=[];    let i=0;    $('#linhas-pecas .linha').each(function (){        array=[];        let id_peca = $(this).find('.id_peca').val();        let qnt = $(this).find('.qnt').val();        array[0] = id_peca;        array[1] = qnt;        linhas_pecas.push(array);        i++;    })        $.ajax({            type: "POST",            data: {atualizar_pecas:linhas_pecas, id_assistencia_cliente_maquina:id_assistencia_cliente_maquina},            url: "../mod_inicio/dashboard.php",            success: function(msg){                if(msg != ""){                /*    let arrayPecas = JSON.parse(msg);                    if(arrayPecas.length > 0){                        console.log(arrayPecas);                        let data_linha=$('.')                        let options = $('.pecas option');                        arrayPecas.forEach(function(item) {                            $('.pecas').append('<option value="'+item['id']+'" class="peca"> '+item['nome']+' </option>')                        });                    }*/                    growlNot("success", "Atualizado");                }            }        });}$('.modal-backdrop.fade.in').click(function (){    $(this).remove();})function closeModal(elem){    if(elem=="#modal-mostrar-detalhes-maquina"){        if($("#revisao_periodica").prop("checked")==true){            if($("#horas_revisao").val()*1<=$("#horas_revisao").attr("min")*1 || $("#horas_revisao").val()==0 || $("#horas_revisao").val()==""){                growlNot("danger","Valide as horas de revisão","center","bottom");                return;            }        }    }    $(elem).find('.close').first().trigger('click');}function editarMarcacao(id_assistencia) {    $("#modal-editar-marcacao").modal("show");    $("#apagar-marcacao").attr("onclick","confirmaModal('../mod_assistencias/reciclar.php?id="+id_assistencia+"&from_dashboard')");    $("#modal-editar-marcacao .modal-body").html("<h3 class='text-center text-muted'><i class='fa fa-spinner fa-spin'></i></h3>");    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function () {        if (this.readyState == 4 && this.status == 200) {            let content = this.responseText;            $('#modal-editar-marcacao .modal-body').html(content);            $('#modal-editar-marcacao .modal-body .select-select2').select2();        }    }    xmlhttp.open("GET", "../mod_inicio/_editarMarcacao.php?editar_marcacao=" + id_assistencia, true);    xmlhttp.send();}function OpenModalHistoricoMaquina(id_maquina=0){    if(id_maquina == 0){       id_maquina = $('#modal-mostrar-detalhes-maquina #id_maquina').val();    }    $('#modal-mostrar-historico-maquina').modal('show');    OpenModalHistoricoMaquinaAjax(id_maquina);}function OpenModalHistoricoMaquinaAjax(id_maquina){    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function () {        if (this.readyState == 4 && this.status == 200) {            let content = this.responseText;            $('#modal-mostrar-historico-maquina .modal-body').html(content);            if($('html').attr('pesquisa') == "1"){                $('.modal a.btn-info, .modal .adicionar-maquina a, .modal .add-linha, #clear, .modal .modal-header a.pull-right, .remove-linha a').hide();            }else{                $('.modal a.btn-info, .modal .adicionar-maquina a, .modal .add-linha, #clear, .modal .modal-header a.pull-right, .remove-linha a').show();            }            $('.select-select2').select2();            setModalClicks();        }    }    xmlhttp.open("GET", "../mod_inicio/dashboard.php?mostrar_historico_maquina=" + id_maquina, true);    xmlhttp.send();}function OpenModalDetalhesCliente(id_cliente=0){    $('#modal-mostrar-detalhes-cliente').modal('show');    OpenModalDetalhesClienteAjax(id_cliente);}function OpenModalDetalhesClienteAjax(id_cliente){    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function () {        if (this.readyState == 4 && this.status == 200) {            let content = this.responseText;            $('#modal-mostrar-detalhes-cliente .modal-body').html(content);            if($('html').attr('pesquisa') == "1"){                $('.modal a.btn-info, .modal .adicionar-maquina a, .modal .add-linha, #clear, .modal .modal-header a.pull-right, .remove-linha a').hide();            }else{                $('.modal a.btn-info, .modal .adicionar-maquina a, .modal .add-linha, #clear, .modal .modal-header a.pull-right, .remove-linha a').show();            }            $('.select-select2').select2();            setModalClicks();            // Javascript to enable link to tab            var hash = document.location.hash;            var prefix = "tab_";            if (hash) {                $('.nav-tabs a[href="'+hash.replace(prefix,"")+'"]').tab('show');            }// Change hash for page-reload            $('.nav-tabs a').on('shown', function (e) {                window.location.hash = e.target.hash.replace("#", "#" + prefix);            });            // Initialize Tabs            $('[data-toggle="tabs"] a, .enable-tabs a').click(function(e){ e.preventDefault(); $(this).tab('show'); });        }    }    xmlhttp.open("GET", "../mod_inicio/dashboard.php?mostrar_detalhes_cliente=" + id_cliente, true);    xmlhttp.send();}function OpenModalMostrarDetalhesMaquinaHistorico(elem){    $('#modal-mostrar-detalhes-maquina-historico').modal('show');    let id_assistencia_cliente_maquina = $(elem).attr('id_assistencia_cliente_maquina');    $('#modal-mostrar-detalhes-maquina-historico #id_assistencia_cliente_maquina_historico_modal').val(id_assistencia_cliente_maquina);    OpenModalMostrarDetalhesMaquinaHistoricoAjax(id_assistencia_cliente_maquina);}function OpenModalMostrarDetalhesMaquinaHistoricoAjax(id_assistencia_cliente_maquina){    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function () {        if (this.readyState == 4 && this.status == 200) {            let content = this.responseText;            $('#modal-mostrar-detalhes-maquina-historico .modal-body').html(content);            if($('html').attr('pesquisa') == "1"){                $('.modal a.btn-info, .modal .adicionar-maquina a, .modal .add-linha, #clear, .modal .modal-header a.pull-right, .remove-linha a').hide();            }else{                $('.modal a.btn-info, .modal .adicionar-maquina a, .modal .add-linha, #clear, .modal .modal-header a.pull-right, .remove-linha a').show();            }            $('.select-select2').select2();            setModalClicks();        }    }    xmlhttp.open("GET", "../mod_inicio/dashboard.php?mostrar_historico_detalhes_maquina=" + id_assistencia_cliente_maquina, true);    xmlhttp.send();}function abrirModalAssinatura(id_assistencia_cliente){    $('#modal-assinatura_assistencia').modal('show');   // $('#modal-assinatura_assistencia').show(500);    $(".aviso-assistencias-por-terminar").html("<h3 class='text-muted text-center'><i class='fa fa-spinner fa-spin'></i><br><small>Validar se tem serviços por terminar...</small></h3>");    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function () {        if (this.readyState == 4 && this.status == 200) {            $(".aviso-assistencias-por-terminar").html(this.responseText);        }    };    xmlhttp.open("GET", "../mod_inicio/_verSeTemAssistenciasPorTerminar.php?id_assistencia_cliente=" + id_assistencia_cliente+"&para_assinar", true);    xmlhttp.send();    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function () {        if (this.readyState == 4 && this.status == 200) {            $("#tempo_pausa").val(this.responseText);        }    };    xmlhttp.open("GET", "../mod_inicio/_obterTempoPausa.php?id_assistencia_cliente=" + id_assistencia_cliente, true);    xmlhttp.send();    $(".info_maquinas_pendentes").html("<i class='text-muted'>Aguarde..</i>");    var xmlhttp2 = new XMLHttpRequest();    xmlhttp2.onreadystatechange = function () {        if (this.readyState == 4 && this.status == 200) {            if(this.responseText==1){                $("#servico_concluido").prop("checked",false).trigger("change");                $(".info_maquinas_pendentes").html("<i class='fa fa-warning'></i> Marcou uma ou mais máquinas como não concluídas.");            }else{                $(".info_maquinas_pendentes").html("");            }        }    };    xmlhttp2.open("GET", "../mod_inicio/_verSeTemMaquinasPorTerminar.php?id_assistencia_cliente=" + id_assistencia_cliente+"", true);    xmlhttp2.send();    $('#modal-assinatura_assistencia #id_assistencia_cliente_modal').val(id_assistencia_cliente);}function abrirModalInserirQuilometros(id_assistencia_cliente, linha){    $('#modal-inserir-kilometros').modal('show');    // $('#modal-assinatura_assistencia').show(500);    $('#modal-inserir-kilometros #id_assistencia_cliente_modal').val(id_assistencia_cliente);    $( ".inserir-kilometros-btn").unbind( "click" );    $('.inserir-kilometros-btn').click(function (){        inserirKilometrosAjax(id_assistencia_cliente, linha);    })}function inserirKilometrosAjax(id_assistencia_cliente, linha){    let kilometros = $('#modal-inserir-kilometros #kilometros').val();    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function () {        if (this.readyState == 4 && this.status == 200 ) {            growlNot("success", "Atualizado");            $(linha).find('.b-quilometros').text(kilometros+" Km's");            $('#modal-inserir-kilometros > .modal-dialog > .modal-content > .modal-header > .close').trigger('click');            $('#modal-inserir-kilometros #kilometros').val('');        }    };    xmlhttp.open("GET", "/mod_assistencias/detalhes.php?id_assistencia_cliente=" +id_assistencia_cliente+'&kilometros='+kilometros, true);    xmlhttp.send();}function confirmaModalAjax(url) {    $('#confirmaModalSim').click(function (e){        e.preventDefault();        let id_assistencia_cliente = $('#modal-mostrar-maquinas #id_assistencia_cliente_modal').val();        deleteAssistenciaCliente(id_assistencia_cliente);    })    $("#confirmaModal").click();}function deleteAssistenciaCliente(id_assistencia_cliente){    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function () {        if (this.readyState == 4 && this.status == 200) {            growlNot("success", "Atualizado");            $('#modal-mostrar-maquinas > .modal-dialog > .modal-content > .modal-header > .close').trigger('click');            $('#modal-compose > .modal-dialog > .modal-content > .modal-header > .close').trigger('click');            $(".assistencias-clientes .widget").each(function (){                if($(this).attr('id_assistencia_cliente') == id_assistencia_cliente){                   // $('.linha-assistencia-clientes .linha[id_assistencia_cliente="'+id_assistencia_cliente+'"]').hide('slow');                    $(this).hide('slow');                    setTimeout(function (){                        /*if($(this).parent().length == 1){                            $(this).parent().remove();                        }else{                        }*/                        $(this).remove();                        return false;                    },500)                }            })           $('.linha-assistencia-clientes .linha[id_assistencia_cliente="'+id_assistencia_cliente+'"]').hide('slow');            /*      setTimeout(function (){                      $(".linha-assistencia-clientes .linha").each(function (){                          if($(this).attr('id_assistencia_cliente') == id_assistencia_cliente){                              if($(this).parent().length == 1){                                  $(this).parent().remove();                              }else{                                  $(this).remove();                              }                          }                      })                      if($(".linha-assistencia-clientes .linha[id_assistencia_cliente='"+id_assistencia_cliente+"']").parent().length == 1){                          $(".linha-assistencia-clientes .linha[id_assistencia_cliente='"+id_assistencia_cliente+"']").parent().remove();                      }                      $(".linha-assistencia-clientes .linha[id_assistencia_cliente='"+id_assistencia_cliente+"']").remove();            },500)   */        }    }    xmlhttp.open("GET", "../mod_inicio/dashboard.php?eliminar_assistencia_cliente=" + id_assistencia_cliente, true);    xmlhttp.send();}function confirmaModalAjax2(url) {    $('#confirmaModalSim').click(function (e){        e.preventDefault();        let id_assistencia_cliente_maquina = $('#modal-mostrar-detalhes-maquina #id_assistencia_cliente_maquina_modal').val();        deleteAssistenciaCliente2(id_assistencia_cliente_maquina);    })    $("#confirmaModal").click();}function deleteAssistenciaCliente2(id_assistencia_cliente_maquina){    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function () {        if (this.readyState == 4 && this.status == 200) {            $('#modal-mostrar-detalhes-maquina > .modal-dialog > .modal-content > .modal-header > .close').trigger('click');            $('#modal-compose > .modal-dialog > .modal-content > .modal-header > .close').trigger('click');            $('.linha-assistencia-cliente-maquina .linha[id_assistencia_cliente_maquina="'+id_assistencia_cliente_maquina+'"]').hide('slow');            setTimeout(function (){                $('.linha-assistencia-cliente-maquina .linha[id_assistencia_cliente_maquina="'+id_assistencia_cliente_maquina+'"]').remove();            },500)        }    }    xmlhttp.open("GET", "../mod_inicio/dashboard.php?eliminar_assistencia_cliente_maquina=" + id_assistencia_cliente_maquina, true);    xmlhttp.send();}function randomIntFromInterval(min, max) { // min and max included    return Math.floor(Math.random() * (max - min + 1) + min)}function colocarTempoAtual(elem){    var dt = new Date();    var time = (dt.getHours()<10?'0':'') + dt.getHours() + ":" + (dt.getMinutes()<10?'0':'') + dt.getMinutes();    $(elem).val(time);}function openModal(modal, insertViaAjax=0, id_cliente=0,){   if(modal=="#modal-ver-viatura"){       verViaturaAjax();   }    if(modal=="#modal-criar-assistencia"){        getHtmlCriarAjax(modal,'mod_assistencias');    }    if(modal=="#modal-criar-assistencia-interna"){        modal="#modal-criar-assistencia";        getHtmlCriarAjax(modal,'mod_assistencias','','interna');    }    if(modal=="#modal-criar-maquina"){        let parametro="mod_maquinas";        if(insertViaAjax == 1){            parametro = "mod_maquinas&viaAjax=1&id_cliente="+id_cliente;        }        getHtmlCriarAjax(modal,parametro);    }    if(modal == "#modal-ver-calendario"){        $('.fc-today-button').trigger('click');    }    $(modal).modal('show');}function insertMaquinaSelect2(){    let ref=$('#modal-criar-maquina #ref').val();    let nome_maquina=$('#modal-criar-maquina #nome_maquina').val();    let id_cliente=$('#modal-criar-maquina #id_cliente').val();    let descricao=$('#modal-criar-maquina #descricao').val();    if(nome_maquina == undefined || nome_maquina == "" || id_cliente == "" || id_cliente==undefined || ref == "" || ref==undefined){        alert('Preencha todos os campos obrigatórios.')        return;    }        $.ajax({            type: "POST",            data: {                ref:ref,                nome_maquina:nome_maquina,                id_cliente:id_cliente,                descricao:descricao,            },            url: "../mod_inicio/dashboard.php",            success: function(msg){                if(msg != ""){                    $('#id_maquina').append(msg);                    growlNot("success", "Atualizado");                    $('#id_maquina').val($('#id_maquina option').last().val());                    $('#id_maquina').trigger('change.select2'); // Notify only Select2 of changes                    $('#modal-criar-maquina > .modal-dialog > .modal-content > .modal-header > .close').trigger('click');                }            }        });}function getHtmlCriarAjax(elem, parametro, data="",tipo_assistencia='externa'){    $(elem).find('.modal-body .modal-body-content').html("<h3 class='text-center text-muted'><i class='fa fa-spinner fa-spin'></i><br><small>Aguarde..</small></h3>");    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function () {        if (this.readyState == 4 && this.status == 200) {            $(elem).find('.modal-body .modal-body-content').html(this.responseText);            $('.select-select2').select2();            if(data != ""){                $('#modal-criar-assistencia #data_inicio').val(data);                $('#modal-criar-assistencia #data_fim').val(data);            }        }    }    xmlhttp.open("GET", "../mod_inicio/dashboard.php?getCriar="+parametro+"&tipo_assistencia="+tipo_assistencia, true);    xmlhttp.send();}setModalClicks();function setModalClicks(){    let index_btn=[];    let iii=0;    $('.modal').each(function (index, elem){        index_btn[iii] = $(elem).find(' > .modal-dialog > .modal-content > .modal-header > .close');        index_btn[iii].click(function (e){            e.stopPropagation();            $(elem).find('.modal-dialog').addClass('animate-top');            setTimeout(function (){                $(elem).modal('hide');                // $('.animate-bottom').removeClass('animate-bottom');                $(elem).find('.animate-top').removeClass('animate-top');            }, 400);        })        iii++;    })}function atualizarDatasViatura(coluna, modal){    let value=$('#'+coluna).val();    if(value==""){        growlNot("danger","Insira um valor no campo ["+coluna+"]","center","bottom");        return;    }    if((coluna=='kms_inicio' || coluna=='kms_pneus' || coluna=='kms_revisao') && value<=$('#'+coluna).attr("min")){        growlNot("danger","Os kms inseridos têm de ser superiores os inseridos anteriormente.","center","bottom");        return;    }    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function () {        if (this.readyState == 4 && this.status == 200) {            growlNot("success", "Atualizado");            $(modal).modal("hide");            //$('.'+coluna).html(this.responseText);            $('.'+coluna).hide('slow');        }    }    xmlhttp.open("GET", "../mod_inicio/dashboard.php?data="+value+"&coluna=" + coluna, true);    xmlhttp.send();}function gerarQRCodeViatura(){  let id_tecnico = $('#id_tecnico').val();  let id_viatura = $('#id_tecnico').attr('id_viatura');  $('.qrcode-viatura').attr('href', "http://chart.apis.google.com/chart?cht=qr&chs=300x300&chl=https://filc.srv01.pt/mod_inicio/dashboard.php?emprestar_viatura="+id_viatura+"%26id_tecnico="+id_tecnico);  $('.qrcode-viatura .qr-code-img').attr('src', "http://chart.apis.google.com/chart?cht=qr&chs=300x300&chl=https://filc.srv01.pt/mod_inicio/dashboard.php?emprestar_viatura="+id_viatura+"%26id_tecnico="+id_tecnico);  $('.gerar-qrcode').toggle('slow');  $('.mostrar-qrcode').show('slow').addClass('opened-qrcode');    function everyTime() {        if($('.mostrar-qrcode').hasClass('opened-qrcode')){            var xmlhttp = new XMLHttpRequest();            xmlhttp.onreadystatechange = function () {                if (this.readyState == 4 && this.status == 200) {                    if(this.responseText == "1"){                        $('.mostrar-qrcode').hide('slow');                        setTimeout(function (){                            $('.gif-success').show('slow');                        }, 600)                        setTimeout(function (){                            window.location.replace("https://filc.srv01.pt/mod_inicio/dashboard.php?open-modal-viatura=1");                        }, 2000)                    }                }            }            xmlhttp.open("GET", "../mod_inicio/dashboard.php?processo_troca_viatura="+id_viatura, true);            xmlhttp.send();        }else{            clearInterval(myInterval);        }    }    var myInterval = setInterval(everyTime, 1000);}function verViaturaAjax(){    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function () {        if (this.readyState == 4 && this.status == 200) {            let content = this.responseText;            $('#modal-ver-viatura .modal-body').html(content);            setModalClicks();            $('.select-select2').select2();            IniciarQRCODEPlugin();        }    }    xmlhttp.open("GET", "../mod_inicio/dashboard.php?ver_viatura", true);    xmlhttp.send();}function cancelarQRCode(){    $('.gerar-qrcode').show('slow');    $('.mostrar-qrcode').hide('slow').removeClass('opened-qrcode');   /* $('.mostrar-qrcode a').click(function (){    })*/}function IniciarQRCODEPlugin(){    "use strict";// cross browser request animation frame    if ( !window.requestAnimationFrame ) {        window.requestAnimationFrame = ( function() {            return window.webkitRequestAnimationFrame ||                window.mozRequestAnimationFrame ||                window.oRequestAnimationFrame ||                window.msRequestAnimationFrame ||                function( /* function FrameRequestCallback */ callback, /* DOMElement Element */ element ) {                    window.setTimeout( callback, 1000 / 60 );                };        } )();    }    var qrr, // our qrcode reader singletone instance        QRCodeReader = function() {};    $.qrCodeReader = {        jsQRpath: "../assets/qrcode-reader/dist/js/jsQR/jsQR.min.js",        beepPath: "../assets/qrcode-reader/dist/audio/beep.mp3",        instance: null,        defaults: {            // single read or multiple readings/            multiple: false,            // only triggers for QRCodes matching the regexp            qrcodeRegexp: /./,            // play "Beep!" sound when reading qrcode successfully            audioFeedback: true,            // in case of multiple readings, after a successful reading,            // wait for repeatTimeout milliseconds before trying for the next lookup.            // Set to 0 to disable automatic re-tries: in such case user will have to            // click on the webcam canvas to trigger a new reading tentative            repeatTimeout: 1500,            // target input element to fill in with the readings in case of successful reading            // (newline separated in case of multiple readings).            // Such element can be specified as jQuery object or as string identifier, e.g. "#target-input"            target: null,            // in case of multiple readings, skip duplicate readings            skipDuplicates: true,            // color of the lines highlighting the QRCode in the image when found            lineColor: "#FF3B58",            // In case of multiple readings, function to call when pressing the OK button (or Enter),            // in such case read QRCodes are passed as an array.            // In case of single reading, call immediately after the successful reading            // (in the latter case the QRCode is passed as a single string value)            callback: function(code) {}        }    };    QRCodeReader.prototype = {        constructor: QRCodeReader,        init: function () {            // build the HTML            qrr.buildHTML();            qrr.scriptLoaded = false;            qrr.isOpen = false;            // load the script performing the actual QRCode reading            $.getScript( $.qrCodeReader.jsQRpath, function( data, textStatus, jqxhr ) {                if ( jqxhr.status == 200) {                    qrr.scriptLoaded = true;                } else {                    console.error("Error loading QRCode parser script");                };            });        },        // build the HTML interface of the widget        buildHTML: function() {            qrr.bgOverlay = $('<div id="qrr-overlay"></div>');            qrr.container = $('<div id="qrr-container"></div>');            qrr.closeBtn = $('<span id="qrr-close">&times;</span>')            qrr.closeBtn.appendTo(qrr.container);            qrr.okBtn = $('<a id="qrr-ok">OK</a>');            qrr.loadingMessage = $('<div id="qrr-loading-message">🎥 Unable to access video stream (please make sure you have a webcam enabled)</div>');            qrr.canvas = $('<canvas id="qrr-canvas" class="hidden"></canvas>');            qrr.audio = $('<audio hidden id="qrr-beep" src="' + $.qrCodeReader.beepPath + '" type="audio/mp3"></audio>');            qrr.outputDiv = $('<div id="qrr-output"></div>');            qrr.outputNoData = $('<div id="qrr-nodata">No QR code detected.</div>');            qrr.outputData = $('<div id="qrr-output-data"></div>');            qrr.outputNoData.appendTo(qrr.outputDiv);            qrr.outputData.appendTo(qrr.outputDiv);            qrr.loadingMessage.appendTo(qrr.container);            qrr.canvas.appendTo(qrr.container);            qrr.outputDiv.appendTo(qrr.container);            qrr.audio.appendTo(qrr.container);            qrr.okBtn.appendTo(qrr.container);            qrr.bgOverlay.appendTo(document.body);            qrr.bgOverlay.on("click", qrr.close);            qrr.closeBtn.on("click", qrr.close);            qrr.container.appendTo(document.body);            qrr.video = document.createElement("video");        },        // draw a line        drawLine: function(begin, end, color) {            var canvas = qrr.canvas[0].getContext("2d");            canvas.beginPath();            canvas.moveTo(begin.x, begin.y);            canvas.lineTo(end.x, end.y);            canvas.lineWidth = 4;            canvas.strokeStyle = color;            canvas.stroke();        },        // draw a rectangle around a matched QRCode image        drawBox: function(location, color) {            qrr.drawLine(location.topLeftCorner, location.topRightCorner, color);            qrr.drawLine(location.topRightCorner, location.bottomRightCorner, color);            qrr.drawLine(location.bottomRightCorner, location.bottomLeftCorner, color);            qrr.drawLine(location.bottomLeftCorner, location.topLeftCorner, color);        },        // merge the options with the element data attributes and then save them        setOptions: function (element, options) {            // data-attributes options            var dataOptions = {                multiple: $(element).data("qrr-multiple"),                qrcodeRegexp: new RegExp($(element).data("qrr-qrcode-regexp")),                audioFeedback: $(element).data("qrr-audio-feedback"),                repeatTimeout: $(element).data("qrr-repeat-timeout"),                target: $(element).data("qrr-target"),                skipDuplicates: $(element).data("qrr-skip-duplicates"),                lineColor: $(element).data("qrr-line-color"),                callback: $(element).data("qrr-callback")            }            // argument options override data-attributes options            options = $.extend( {}, dataOptions, options);            // extend defaults with options            var settings = $.extend( {},  $.qrCodeReader.defaults, options);            // save options in the data attributes            $(element).data("qrr", settings);        },        // get the options from the element the reader is attached        getOptions: function (element) {            qrr.settings = $(element).data("qrr");        },        // open the QRCode reader interface        open: function () {            // prevent multiple opening            if (qrr.isOpen) return;            // get options for the current called element            qrr.getOptions(this);            // show the widget            qrr.bgOverlay.show();            qrr.container.slideDown();            // initialize codes container            qrr.codes = [];            // initialize interface            qrr.outputNoData.show();            qrr.outputData.empty();            qrr.outputData.hide();            if (qrr.settings.multiple) {                qrr.okBtn.show();                qrr.okBtn.off("click").on("click", qrr.doneReading);            } else {                qrr.okBtn.hide();            }            // close on ESC, doneReading on Enter if multiple            $(document).on('keyup.qrCodeReader', function(e) {                if(e.keyCode === 27) {                    qrr.close();                }                if (qrr.settings.multiple && e.keyCode === 13) {                    qrr.doneReading();                }            });            qrr.isOpen = true;            if (qrr.scriptLoaded) {                // start the business                qrr.start();            }        },        // get the camera, show video, start searching qrcode in the stream        start: function() {            // Use {facingMode: environment} to attempt to get the front camera on phones            navigator.mediaDevices.getUserMedia({ video: { facingMode: "environment" } }).then(function(stream) {                qrr.video.srcObject = stream;                qrr.video.setAttribute("playsinline", true); // required to tell iOS safari we don't want fullscreen                qrr.video.play();                qrr.startReading();            });        },        // start continuously searching qrcode in the video stream        startReading: function() {            qrr.requestID = window.requestAnimationFrame(qrr.read);        },        // done with reading QRcode        doneReading: function() {            var value = qrr.codes[0];            // fill in the target element            if (qrr.settings.target) {                if (qrr.settings.multiple) {                    var value = qrr.codes.join("\n");                }                $(qrr.settings.target).val(value);            }            // call a callback            if (qrr.settings.callback) {                try {                    if (qrr.settings.multiple) {                        qrr.settings.callback(qrr.codes);                    } else {                        qrr.settings.callback(value);                    }                } catch(err) {                    console.error(err);                }            }            // close the widget            qrr.close();        },        // search for a QRCode        read: function() {            var codeRead = false;            var canvas = qrr.canvas[0].getContext("2d");            qrr.loadingMessage.text("⌛ Loading video...");            qrr.canvas.off("click.qrCodeReader", qrr.startReading);            if (qrr.video.readyState === qrr.video.HAVE_ENOUGH_DATA) {                qrr.loadingMessage.hide();                qrr.canvas.removeClass("hidden");                qrr.canvas[0].height = qrr.video.videoHeight;                qrr.canvas[0].width = qrr.video.videoWidth;                canvas.drawImage(qrr.video, 0, 0, qrr.canvas[0].width, qrr.canvas[0].height);                var imageData = canvas.getImageData(0, 0, qrr.canvas[0].width, qrr.canvas[0].height);                // this performs the actual QRCode reading                var code = jsQR(imageData.data, imageData.width, imageData.height, {                    inversionAttempts: "dontInvert",                });                // a QRCode has been found                if (code && qrr.settings.qrcodeRegexp.test(code.data)) {                    // draw lines around the matched QRCode                    qrr.drawBox(code.location, qrr.settings.lineColor);                    codeRead = true;                    qrr.codes.push(code.data);                    qrr.outputNoData.hide();                    qrr.outputData.show();                    // play audio if requested                    if (qrr.settings.audioFeedback) {                        qrr.audio[0].play();                    }                    // read multiple codes                    if (qrr.settings.multiple) {                        // avoid duplicates                        if(qrr.settings.skipDuplicates) {                            qrr.codes = $.unique(qrr.codes);                        }                        // show our reading                        $('<div class="qrr-input"></div>').text(code.data).appendTo(qrr.outputData);                        qrr.outputDiv[0].scrollTop = qrr.outputDiv[0].scrollHeight;                        // read again by clicking on the canvas                        qrr.canvas.on("click.qrCodeReader", qrr.startReading);                        // repeat reading after a timeout                        if (qrr.settings.repeatTimeout > 0) {                            setTimeout(qrr.startReading, qrr.settings.repeatTimeout);                        } else {                            qrr.loadingMessage.text("Click on the image to read the next QRCode");                            qrr.loadingMessage.show();                        }                        // single reading                    } else {                        qrr.doneReading();                    }                }            }            if (!codeRead) {                qrr.startReading();            }        },        close: function() {            // cancel the refresh function            if (qrr.requestID) {                window.cancelAnimationFrame(qrr.requestID);            }            // unbind keyboard            $(document).off('keyup.qrCodeReader');            // stop the video            if (qrr.video.srcObject) {                qrr.video.srcObject.getTracks()[0].stop();            }            // hide the GUI            qrr.canvas.addClass("hidden");            qrr.loadingMessage.show();            qrr.bgOverlay.hide();            qrr.container.hide();            qrr.isOpen = false;        }    };    $.fn.qrCodeReader = function ( options ) {        // Instantiate the plugin only once (singletone) in the page:        // when called again (or on a different element), we simply re-set the options        // and display the QrCode reader interface with the right options.        // Options are saved in the data attribute of the bound element.        if(!$.qrCodeReader.instance) {            qrr = new QRCodeReader();            qrr.init();            $.qrCodeReader.instance = qrr;        }        return this.each(function () {            qrr.setOptions(this, options);            $(this).off("click.qrCodeReader").on("click.qrCodeReader", qrr.open);        });    };    "use strict";// cross browser request animation frame    if ( !window.requestAnimationFrame ) {        window.requestAnimationFrame = ( function() {            return window.webkitRequestAnimationFrame ||                window.mozRequestAnimationFrame ||                window.oRequestAnimationFrame ||                window.msRequestAnimationFrame ||                function( /* function FrameRequestCallback */ callback, /* DOMElement Element */ element ) {                    window.setTimeout( callback, 1000 / 60 );                };        } )();    }    var qrr, // our qrcode reader singletone instance        QRCodeReader = function() {};    $.qrCodeReader = {        jsQRpath: "../assets/layout/js/jsQR/jsQR.min.js",        beepPath: "../assets/qrcode-reader/dist/audio/beep.mp3",        instance: null,        defaults: {            // single read or multiple readings/            multiple: false,            // only triggers for QRCodes matching the regexp            qrcodeRegexp: /./,            // play "Beep!" sound when reading qrcode successfully            audioFeedback: true,            // in case of multiple readings, after a successful reading,            // wait for repeatTimeout milliseconds before trying for the next lookup.            // Set to 0 to disable automatic re-tries: in such case user will have to            // click on the webcam canvas to trigger a new reading tentative            repeatTimeout: 1500,            // target input element to fill in with the readings in case of successful reading            // (newline separated in case of multiple readings).            // Such element can be specified as jQuery object or as string identifier, e.g. "#target-input"            target: null,            // in case of multiple readings, skip duplicate readings            skipDuplicates: true,            // color of the lines highlighting the QRCode in the image when found            lineColor: "#FF3B58",            // In case of multiple readings, function to call when pressing the OK button (or Enter),            // in such case read QRCodes are passed as an array.            // In case of single reading, call immediately after the successful reading            // (in the latter case the QRCode is passed as a single string value)            callback: function(code) {}        }    };    QRCodeReader.prototype = {        constructor: QRCodeReader,        init: function () {            // build the HTML            qrr.buildHTML();            qrr.scriptLoaded = false;            qrr.isOpen = false;            // load the script performing the actual QRCode reading            $.getScript( $.qrCodeReader.jsQRpath, function( data, textStatus, jqxhr ) {                if ( jqxhr.status == 200) {                    qrr.scriptLoaded = true;                } else {                    console.error("Error loading QRCode parser script");                };            });        },        // build the HTML interface of the widget        buildHTML: function() {            qrr.bgOverlay = $('<div id="qrr-overlay"></div>');            qrr.container = $('<div id="qrr-container"></div>');            qrr.closeBtn = $('<span id="qrr-close">&times;</span>')            qrr.closeBtn.appendTo(qrr.container);            qrr.okBtn = $('<a id="qrr-ok">OK</a>');            qrr.loadingMessage = $('<div id="qrr-loading-message">🎥 Não foi possível aceder à webcam (por favor certifique-se de que tem as permissões ativadas)</div>');            qrr.canvas = $('<canvas id="qrr-canvas" class="hidden"></canvas>');            qrr.audio = $('<audio hidden id="qrr-beep" src="' + $.qrCodeReader.beepPath + '" type="audio/mp3"></audio>');            qrr.outputDiv = $('<div id="qrr-output"></div>');            qrr.outputNoData = $('<div id="qrr-nodata">Não foi detetado nenhum código QR.</div>');            qrr.outputData = $('<div id="qrr-output-data"></div>');            qrr.outputNoData.appendTo(qrr.outputDiv);            qrr.outputData.appendTo(qrr.outputDiv);            qrr.loadingMessage.appendTo(qrr.container);            qrr.canvas.appendTo(qrr.container);            qrr.outputDiv.appendTo(qrr.container);            qrr.audio.appendTo(qrr.container);            qrr.okBtn.appendTo(qrr.container);            qrr.bgOverlay.appendTo(document.body);            qrr.bgOverlay.on("click", qrr.close);            qrr.closeBtn.on("click", qrr.close);            qrr.container.appendTo(document.body);            qrr.video = document.createElement("video");        },        // draw a line        drawLine: function(begin, end, color) {            var canvas = qrr.canvas[0].getContext("2d");            canvas.beginPath();            canvas.moveTo(begin.x, begin.y);            canvas.lineTo(end.x, end.y);            canvas.lineWidth = 4;            canvas.strokeStyle = color;            canvas.stroke();        },        // draw a rectangle around a matched QRCode image        drawBox: function(location, color) {            qrr.drawLine(location.topLeftCorner, location.topRightCorner, color);            qrr.drawLine(location.topRightCorner, location.bottomRightCorner, color);            qrr.drawLine(location.bottomRightCorner, location.bottomLeftCorner, color);            qrr.drawLine(location.bottomLeftCorner, location.topLeftCorner, color);        },        // merge the options with the element data attributes and then save them        setOptions: function (element, options) {            // data-attributes options            var dataOptions = {                multiple: $(element).data("qrr-multiple"),                qrcodeRegexp: new RegExp($(element).data("qrr-qrcode-regexp")),                audioFeedback: $(element).data("qrr-audio-feedback"),                repeatTimeout: $(element).data("qrr-repeat-timeout"),                target: $(element).data("qrr-target"),                skipDuplicates: $(element).data("qrr-skip-duplicates"),                lineColor: $(element).data("qrr-line-color"),                callback: $(element).data("qrr-callback")            }            // argument options override data-attributes options            options = $.extend( {}, dataOptions, options);            // extend defaults with options            var settings = $.extend( {},  $.qrCodeReader.defaults, options);            // save options in the data attributes            $(element).data("qrr", settings);        },        // get the options from the element the reader is attached        getOptions: function (element) {            qrr.settings = $(element).data("qrr");        },        // open the QRCode reader interface        open: function () {            // prevent multiple opening            if (qrr.isOpen) return;            // get options for the current called element            qrr.getOptions(this);            // show the widget            qrr.bgOverlay.show();            qrr.container.slideDown();            // initialize codes container            qrr.codes = [];            // initialize interface            qrr.outputNoData.show();            qrr.outputData.empty();            qrr.outputData.hide();            if (qrr.settings.multiple) {                qrr.okBtn.show();                qrr.okBtn.off("click").on("click", qrr.doneReading);            } else {                qrr.okBtn.hide();            }            // close on ESC, doneReading on Enter if multiple            $(document).on('keyup.qrCodeReader', function(e) {                if(e.keyCode === 27) {                    qrr.close();                }                if (qrr.settings.multiple && e.keyCode === 13) {                    qrr.doneReading();                }            });            qrr.isOpen = true;            if (qrr.scriptLoaded) {                // start the business                qrr.start();            }        },        // get the camera, show video, start searching qrcode in the stream        start: function() {            // Use {facingMode: environment} to attempt to get the front camera on phones            navigator.mediaDevices.getUserMedia({ video: { facingMode: "environment" } }).then(function(stream) {                qrr.video.srcObject = stream;                qrr.video.setAttribute("playsinline", true); // required to tell iOS safari we don't want fullscreen                qrr.video.play();                qrr.startReading();            });        },        // start continuously searching qrcode in the video stream        startReading: function() {            qrr.requestID = window.requestAnimationFrame(qrr.read);        },        // done with reading QRcode        doneReading: function() {            var value = qrr.codes[0];            // fill in the target element            if (qrr.settings.target) {                if (qrr.settings.multiple) {                    var value = qrr.codes.join("\n");                }                $(qrr.settings.target).val(value);            }            // call a callback            if (qrr.settings.callback) {                try {                    if (qrr.settings.multiple) {                        qrr.settings.callback(qrr.codes);                    } else {                        qrr.settings.callback(value);                    }                } catch(err) {                    console.error(err);                }            }            // close the widget            qrr.close();        },        // search for a QRCode        read: function() {            var codeRead = false;            var canvas = qrr.canvas[0].getContext("2d");            qrr.loadingMessage.text("⌛ Loading video...");            qrr.canvas.off("click.qrCodeReader", qrr.startReading);            if (qrr.video.readyState === qrr.video.HAVE_ENOUGH_DATA) {                qrr.loadingMessage.hide();                qrr.canvas.removeClass("hidden");                qrr.canvas[0].height = qrr.video.videoHeight;                qrr.canvas[0].width = qrr.video.videoWidth;                canvas.drawImage(qrr.video, 0, 0, qrr.canvas[0].width, qrr.canvas[0].height);                var imageData = canvas.getImageData(0, 0, qrr.canvas[0].width, qrr.canvas[0].height);                // this performs the actual QRCode reading                var code = jsQR(imageData.data, imageData.width, imageData.height, {                    inversionAttempts: "dontInvert",                });                // a QRCode has been found                if (code && qrr.settings.qrcodeRegexp.test(code.data)) {                    // draw lines around the matched QRCode                    qrr.drawBox(code.location, qrr.settings.lineColor);                    codeRead = true;                    qrr.codes.push(code.data);                    qrr.outputNoData.hide();                    qrr.outputData.show();                    // play audio if requested                    if (qrr.settings.audioFeedback) {                        qrr.audio[0].play();                    }                    // read multiple codes                    if (qrr.settings.multiple) {                        // avoid duplicates                        if(qrr.settings.skipDuplicates) {                            qrr.codes = $.unique(qrr.codes);                        }                        // show our reading                        $('<div class="qrr-input"></div>').text(code.data).appendTo(qrr.outputData);                        qrr.outputDiv[0].scrollTop = qrr.outputDiv[0].scrollHeight;                        // read again by clicking on the canvas                        qrr.canvas.on("click.qrCodeReader", qrr.startReading);                        // repeat reading after a timeout                        if (qrr.settings.repeatTimeout > 0) {                            setTimeout(qrr.startReading, qrr.settings.repeatTimeout);                        } else {                            qrr.loadingMessage.text("Clique na imagem para ler o próximo QRCode");                            qrr.loadingMessage.show();                        }                        // single reading                    } else {                        qrr.doneReading();                    }                }            }            if (!codeRead) {                qrr.startReading();            }        },        close: function() {            // cancel the refresh function            if (qrr.requestID) {                window.cancelAnimationFrame(qrr.requestID);            }            // unbind keyboard            $(document).off('keyup.qrCodeReader');            // stop the video            if (qrr.video.srcObject) {                qrr.video.srcObject.getTracks()[0].stop();            }            // hide the GUI            qrr.canvas.addClass("hidden");            qrr.loadingMessage.show();            qrr.bgOverlay.hide();            qrr.container.hide();            qrr.isOpen = false;        }    };    $.fn.qrCodeReader = function ( options ) {        // Instantiate the plugin only once (singletone) in the page:        // when called again (or on a different element), we simply re-set the options        // and display the QrCode reader interface with the right options.        // Options are saved in the data attribute of the bound element.        if(!$.qrCodeReader.instance) {            qrr = new QRCodeReader();            qrr.init();            $.qrCodeReader.instance = qrr;        }        return this.each(function () {            qrr.setOptions(this, options);            $(this).off("click.qrCodeReader").on("click.qrCodeReader", qrr.open);        });    };// bind all elements of a given class    let linhaPiking = ""    $(".qrcode-reader").qrCodeReader();// read or follow qrcode depending on the content of the target input    $(".openreader-single2").qrCodeReader({callback: function(code) {            if (code) {                // CODE é O URL -> NECESSARIO ENVIAR UM AJAX PARA O "CODE"                if(code != ""){                    var xmlhttp = new XMLHttpRequest();                    xmlhttp.onreadystatechange = function () {                        if (this.readyState == 4 && this.status == 200) {                            window.location.replace("/mod_inicio/dashboard.php?open-modal-viatura=1");                            growlNot("success", "Atualizado");                        }                    }                    xmlhttp.open("GET", code, true);                    xmlhttp.send();                }else{                    alert('Erro!');                }                //code = code.split('qrcode=');                //linhaPiking.find('#qrcode_description').val(code[1]);                //getRegistoProducao(linhaPiking.find('#qrcode_description'));            }        }}).off("click.qrCodeReader").on("click", function(){        $.qrCodeReader.instance.open.call(this);    });}function cloneLinha(elem){    $("#linhas").append($(elem).parent().parent().clone());    CalcLinhas();}function calcular_iva(elem) {    let linha="";    if($(elem).hasClass('linha')){        linha =$(elem);    }else{        linha = $(elem).parent().parent();    }    var quantidade=$(linha).find(".quantidade").val();    var preco_sem_iva=$(linha).find(".preco_sem_iva").val();    var percentagem_iva=$(linha).find(".percentagem_iva").val();    let desconto = 0;    let desconto_unitario = 0;    if($(linha).find('.desconto').val() > 0){        desconto = linha.find('.desconto').val();        desconto_unitario= preco_sem_iva * (desconto/100);        desconto = (quantidade*preco_sem_iva) * (desconto/100);    }    let preco_sem_iva_com_desconto = preco_sem_iva*1 - desconto_unitario;    var preco_total_sem_iva= (quantidade*preco_sem_iva) - desconto;    var preco_total_com_iva=preco_total_sem_iva+(preco_total_sem_iva*(percentagem_iva/100));    var valor_iva = preco_total_com_iva - preco_total_sem_iva;    $(linha).find(".preco_sem_iva_com_desconto").val(preco_sem_iva_com_desconto.toFixed(2));    $(linha).find(".valor_iva").val(valor_iva.toFixed(2));    $(linha).find(".valor_liquido").val(preco_total_com_iva.toFixed(2));    calcular_totais();}function calcular_totais() {    var total_sem_iva=0;    var total_valor_iva=0;    var total_valor_liquido=0;    var desconto=0;    $(".linha").each(function () {        total_sem_iva+=$(this).find(".preco_sem_iva").val()*1;        total_valor_iva+=$(this).find(".valor_iva").val()*1;        total_valor_liquido+=$(this).find(".valor_liquido").val()*1;    });    $("#total_sem_iva").html(total_sem_iva.toFixed(2)+" €");    $("#total_valor_iva").html(total_valor_iva.toFixed(2)+" €");    $("#total_valor_liquido").html(total_valor_liquido.toFixed(2)+" €");    $(".total_valor_liquido").val(total_valor_liquido.toFixed(2));}function CalcLinhas(){    $( ".linha" ).each(function() {        calcular_iva(this);    });}$('.linhasProd').width($('.form-control.nome_produto').width());$('body').click(function (){    $('.linhasProd').hide();})function pesquisaprof(elem){    $('.linha-temporaria').remove();    $('.linhasProd').empty();    var linhas =  $('.linhasProd').clone();    $(linhas).addClass('linha-temporaria');    $('.linhasProd').hide();    var textEnviado = $(elem).val();    if(textEnviado.length > 1){        $(".linha-produtos").each(function () {            var nome=$(this).text();            var preco_sem_iva = $(this).attr('data-preco-sem-iva');            var img = $(this).attr('data-img');            if(nome.toLowerCase().includes(textEnviado.toLowerCase())){                $(linhas).show();                //$('.linhasProd').show();                $(linhas).append('<div data-preco-sem-iva="'+preco_sem_iva+'" data-img="'+img+'"' +                    'class="linha-pesquisa" style="cursor: pointer; padding:5px" onclick="copyText(this)">'+nome+'<div>');                $(linhas).insertAfter(elem);            }        });        $("<hr>").insertAfter('.linha-pesquisa');    }else{        $('.linha-temporaria').remove();    }}function copyText(elem){    $(elem).parent().parent().find('.form-control.nome_produto').val($(elem).text());    var preco_sem_iva = $(elem).attr('data-preco-sem-iva');    var img = $(elem).attr('data-img');    // var qnt = $('.form-control.quantidade').val();    $(elem).parent().parent().parent().find('.form-control.preco_sem_iva').val(preco_sem_iva);    $(elem).parent().parent().parent().find('.linha-imagem').attr("src",img);    calcular_iva( $(elem).parent().parent().parent().find('.form-control.preco_sem_iva'));    $('.linha-temporaria').remove();}function validar_imap() {    $("#result").html("<i class='fa fa-spinner fa-spin'></i> Aguarde..");    var servidor=$("#servidor").val();    var utilizador=$("#utilizador").val();    var password=$("#password").val();    var encryption=$("#encryption").val();    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function() {        if (this.readyState == 4 && this.status == 200) {            $("#result").html(this.responseText);        }    };    xmlhttp.open("GET", "../conf_imap/_validar_imap.php?servidor=" + servidor+"&utilizador="+utilizador+"&password="+password+"&encryption="+encryption, true);    xmlhttp.send();}function validar_smtp() {    $("#result_envio").html("<i class='fa fa-spinner fa-spin'></i> Aguarde..");    var servidor=$("#servidor_smtp").val();    var utilizador=$("#utilizador").val();    var password=$("#password").val();    var porta=$("#porta").val();    var nome=$("#nome").val();    var destino_teste=$("#destino_teste").val();    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function() {        if (this.readyState == 4 && this.status == 200) {            $("#result_envio").html(this.responseText);        }    };    xmlhttp.open("GET", "../conf_imap/_validar_smtp.php?servidor=" + servidor+"&utilizador="+utilizador+"&password="+password+"&porta="+porta+"&destino_teste="+destino_teste+'&nome='+nome, true);    xmlhttp.send();}function getFormResponder(id_reponder_para,id_ticket=0){    $("#modal-responder-email").modal("show");    if($("#modal-responder-email-body").html()!=""){        return;    }    $("#modal-responder-email-body").html("<h4 class='text-center text-muted'><i class='fa fa-spin fa-spinner'></i> Aguarde.. </h4>");    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function() {        if (this.readyState == 4 && this.status == 200) {            $("#modal-responder-email-body").html(this.responseText);            initEnviarEmailSelects();            CKEDITOR.replace( 'descricao' );            initDropzone();        }    };    xmlhttp.open("GET", "../mod_imap/criar.php?id_reponder_para=" + id_reponder_para+"&get_form=1&id_ticket="+id_ticket, true);    xmlhttp.send();}function initEnviarEmailSelects() {    $("#id_conf").select2();    $("#para_email").select2({        tags: true    });    $("#cc").select2({        tags: true    });    $("#bcc").select2({        tags: true    });}function CheckNullUndefined(value) {    return typeof value == 'string' && !value.trim() || typeof value == 'undefined' || value === null;}function EditableSelect2(elem){    var s = $(elem).select2({        tags: true,    });    var $search = s.data('select2').dropdown.$search || $el.data('select2').selection.$search;    s.on("select2:selecting", function(e) {        $search.val(e.params.args.data.text);    });}function filtrarViaturaData(id,data){    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function () {        if (this.readyState == 4 && this.status == 200) {            $('.assistencias-clientes').hide('fast');            $('.sem-dados-transferencias.hidden').hide().removeClass('hidden');            $('.assistencias-clientes').html(this.responseText);            setTimeout(function (){                $('.assistencias-clientes').show('fast');            }, 400)            if(this.responseText == ""){                $('.sem-dados-transferencias').show('slow');            }else{                $('.sem-dados-transferencias').hide('slow');            }        }    }    xmlhttp.open("GET", "/mod_viaturas/detalhes.php?id="+id+"&filtrar_data="+JSON.stringify( data ), true);    xmlhttp.send();}function cancelarFiltro(id){    $('#data_transferencia').val("");    filtrarViaturaData(id, 1);}function get_contratos_do_cliente(id_cliente) {    $("#id_contrato").html("<option>Aguarde..</option>").select2();    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function() {        if (this.readyState == 4 && this.status == 200) {            $("#id_contrato").html(this.responseText).select2();        }    };    xmlhttp.open("GET", "../mod_clientes_contratos/_get_contratos_do_cliente.php?id_cliente=" + id_cliente, true);    xmlhttp.send();}function modal_para_faturar(id_assistencia_cliente,from) {    $(".container-obs-faturar").hide();    $("#modal-para-faturar-botoes").hide();    $(".loading-obs-faturar").show();    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function() {        if (this.readyState == 4 && this.status == 200) {            $(".container-obs-faturar").show();            $("#modal-para-faturar-botoes").show();            $(".loading-obs-faturar").hide();            $("#obs-faturar").val(this.responseText);            $("#confirma-para-faturar").attr("onclick", "para_faturar("+id_assistencia_cliente+")");            $("#modal-para-faturar").modal("show");        }    };    xmlhttp.open("GET", "../mod_assistencias_clientes/_get_obs_faturar.php?id_assistencia_cliente=" + id_assistencia_cliente, true);    xmlhttp.send();}function para_faturar(id_assistencia_cliente) {    $.ajax({        type: "post",        url: "aprovar.php",        data: "id_assistencia_cliente="+id_assistencia_cliente+"&obs_faturar="+$("#obs-faturar").val(),        success: function(response) {            //alert(response);            location.reload();        }    });}function get_form_relatorio(action,btn) {    var xmlhttp = new XMLHttpRequest();    xmlhttp.onreadystatechange = function() {        if (this.readyState == 4 && this.status == 200) {            $("#modal-relatorio-body").html(this.responseText);            $('.input-datepicker, .input-daterange').datepicker({weekStart: 1}).on('changeDate', function(e){ $(this).datepicker('hide'); });            $("#modal-relatorio-title").html($(btn).html());            $(".select-select2").select2();            $("#modal-relatorio").modal("show");        }    };    xmlhttp.open("GET", action+"?get_form", true);    xmlhttp.send();}